/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Violation } from "./violation";
import { Expose, Type } from "class-transformer";

/**
 * Decision rendered by applying the policy against the provided data. Response will be modeled by the data and rego processed.
 */
export class Decision extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "enabled_rules" })
    enabledRules?: string[];

    @SpeakeasyMetadata({ elemType: Violation })
    @Expose({ name: "hard_failures" })
    @Type(() => Violation)
    hardFailures?: Violation[];

    @SpeakeasyMetadata()
    @Expose({ name: "reason" })
    reason?: string;

    @SpeakeasyMetadata({ elemType: Violation })
    @Expose({ name: "soft_failures" })
    @Type(() => Violation)
    softFailures?: Violation[];

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: string;
}
