/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type RestrictionDeleted = {
    /**
     * Response message
     */
    message?: string | undefined;
};

/** @internal */
export const RestrictionDeleted$inboundSchema: z.ZodType<
    RestrictionDeleted,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type RestrictionDeleted$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const RestrictionDeleted$outboundSchema: z.ZodType<
    RestrictionDeleted$Outbound,
    z.ZodTypeDef,
    RestrictionDeleted
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RestrictionDeleted$ {
    /** @deprecated use `RestrictionDeleted$inboundSchema` instead. */
    export const inboundSchema = RestrictionDeleted$inboundSchema;
    /** @deprecated use `RestrictionDeleted$outboundSchema` instead. */
    export const outboundSchema = RestrictionDeleted$outboundSchema;
    /** @deprecated use `RestrictionDeleted$Outbound` instead. */
    export type Outbound = RestrictionDeleted$Outbound;
}
