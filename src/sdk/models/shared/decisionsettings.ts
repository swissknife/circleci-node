/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type DecisionSettings = {
    enabled?: boolean | undefined;
};

/** @internal */
export const DecisionSettings$inboundSchema: z.ZodType<DecisionSettings, z.ZodTypeDef, unknown> =
    z.object({
        enabled: z.boolean().optional(),
    });

/** @internal */
export type DecisionSettings$Outbound = {
    enabled?: boolean | undefined;
};

/** @internal */
export const DecisionSettings$outboundSchema: z.ZodType<
    DecisionSettings$Outbound,
    z.ZodTypeDef,
    DecisionSettings
> = z.object({
    enabled: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DecisionSettings$ {
    /** @deprecated use `DecisionSettings$inboundSchema` instead. */
    export const inboundSchema = DecisionSettings$inboundSchema;
    /** @deprecated use `DecisionSettings$outboundSchema` instead. */
    export const outboundSchema = DecisionSettings$outboundSchema;
    /** @deprecated use `DecisionSettings$Outbound` instead. */
    export type Outbound = DecisionSettings$Outbound;
}
