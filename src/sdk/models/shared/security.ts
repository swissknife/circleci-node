/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import {
    SchemeBasicAuth,
    SchemeBasicAuth$inboundSchema,
    SchemeBasicAuth$Outbound,
    SchemeBasicAuth$outboundSchema,
} from "./schemebasicauth.js";
import * as z from "zod";

export type Security = {
    apiKeyHeader?: string | undefined;
    apiKeyQuery?: string | undefined;
    basicAuth?: SchemeBasicAuth | undefined;
};

/** @internal */
export const Security$inboundSchema: z.ZodType<Security, z.ZodTypeDef, unknown> = z
    .object({
        api_key_header: z.string().optional(),
        api_key_query: z.string().optional(),
        basic_auth: SchemeBasicAuth$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            api_key_header: "apiKeyHeader",
            api_key_query: "apiKeyQuery",
            basic_auth: "basicAuth",
        });
    });

/** @internal */
export type Security$Outbound = {
    api_key_header?: string | undefined;
    api_key_query?: string | undefined;
    basic_auth?: SchemeBasicAuth$Outbound | undefined;
};

/** @internal */
export const Security$outboundSchema: z.ZodType<Security$Outbound, z.ZodTypeDef, Security> = z
    .object({
        apiKeyHeader: z.string().optional(),
        apiKeyQuery: z.string().optional(),
        basicAuth: SchemeBasicAuth$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            apiKeyHeader: "api_key_header",
            apiKeyQuery: "api_key_query",
            basicAuth: "basic_auth",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Security$ {
    /** @deprecated use `Security$inboundSchema` instead. */
    export const inboundSchema = Security$inboundSchema;
    /** @deprecated use `Security$outboundSchema` instead. */
    export const outboundSchema = Security$outboundSchema;
    /** @deprecated use `Security$Outbound` instead. */
    export type Outbound = Security$Outbound;
}
