/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetProjectWorkflowTestMetricsRequest extends SpeakeasyBase {
    /**
     * Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=all-branches" })
    allBranches?: boolean;

    /**
     * The name of a vcs branch. If not passed we will scope the API call to the default branch.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=branch" })
    branch?: string;

    /**
     * Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings).
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=project-slug" })
    projectSlug: string;

    /**
     * The name of the workflow.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=workflow-name" })
    workflowName: string;
}

/**
 * Error response.
 */
export class GetProjectWorkflowTestMetricsInsightsResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

export class MostFailedTests extends SpeakeasyBase {
    /**
     * The class the test belongs to.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "classname" })
    classname: string;

    /**
     * The number of times the test failed
     */
    @SpeakeasyMetadata()
    @Expose({ name: "failed_runs" })
    failedRuns: number;

    /**
     * The file the test belongs to.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "file" })
    file: string;

    /**
     * Whether the test is flaky.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "flaky" })
    flaky: boolean;

    /**
     * The name of the job.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "job_name" })
    jobName: string;

    /**
     * The 95th percentile duration, in seconds, among a group of test runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "p95_duration" })
    p95Duration: number;

    /**
     * The source of the test.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "source" })
    source: string;

    /**
     * The name of the test.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "test_name" })
    testName: string;

    /**
     * The total number of times the test was run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_runs" })
    totalRuns: number;
}

export class SlowestTests extends SpeakeasyBase {
    /**
     * The class the test belongs to.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "classname" })
    classname: string;

    /**
     * The number of times the test failed
     */
    @SpeakeasyMetadata()
    @Expose({ name: "failed_runs" })
    failedRuns: number;

    /**
     * The file the test belongs to.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "file" })
    file: string;

    /**
     * Whether the test is flaky.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "flaky" })
    flaky: boolean;

    /**
     * The name of the job.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "job_name" })
    jobName: string;

    /**
     * The 95th percentile duration, in seconds, among a group of test runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "p95_duration" })
    p95Duration: number;

    /**
     * The source of the test.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "source" })
    source: string;

    /**
     * The name of the test.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "test_name" })
    testName: string;

    /**
     * The total number of times the test was run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_runs" })
    totalRuns: number;
}

/**
 * Test counts for a given pipeline number
 */
export class TestCounts extends SpeakeasyBase {
    /**
     * The number of tests with the error status
     */
    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error: number;

    /**
     * The number of tests with the failure status
     */
    @SpeakeasyMetadata()
    @Expose({ name: "failure" })
    failure: number;

    /**
     * The number of tests with the skipped status
     */
    @SpeakeasyMetadata()
    @Expose({ name: "skipped" })
    skipped: number;

    /**
     * The number of tests with the success status
     */
    @SpeakeasyMetadata()
    @Expose({ name: "success" })
    success: number;

    /**
     * The total number of tests
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total" })
    total: number;
}

export class TestRuns extends SpeakeasyBase {
    /**
     * The number of the pipeline associated with the provided test counts
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pipeline_number" })
    pipelineNumber: number;

    /**
     * The success rate calculated from test counts
     */
    @SpeakeasyMetadata()
    @Expose({ name: "success_rate" })
    successRate: number;

    /**
     * Test counts for a given pipeline number
     */
    @SpeakeasyMetadata()
    @Expose({ name: "test_counts" })
    @Type(() => TestCounts)
    testCounts: TestCounts;

    /**
     * The ID of the workflow associated with the provided test counts
     */
    @SpeakeasyMetadata()
    @Expose({ name: "workflow_id" })
    workflowId: any;
}

/**
 * Project level test metrics response
 */
export class GetProjectWorkflowTestMetricsResponseBody extends SpeakeasyBase {
    /**
     * The average number of tests executed per run
     */
    @SpeakeasyMetadata()
    @Expose({ name: "average_test_count" })
    averageTestCount: number;

    /**
     * Metrics for the most frequently failing tests
     */
    @SpeakeasyMetadata({ elemType: MostFailedTests })
    @Expose({ name: "most_failed_tests" })
    @Type(() => MostFailedTests)
    mostFailedTests: MostFailedTests[];

    /**
     * The number of tests with the same success rate being omitted from most_failed_tests
     */
    @SpeakeasyMetadata()
    @Expose({ name: "most_failed_tests_extra" })
    mostFailedTestsExtra: number;

    /**
     * Metrics for the slowest running tests
     */
    @SpeakeasyMetadata({ elemType: SlowestTests })
    @Expose({ name: "slowest_tests" })
    @Type(() => SlowestTests)
    slowestTests: SlowestTests[];

    /**
     * The number of tests with the same duration rate being omitted from slowest_tests
     */
    @SpeakeasyMetadata()
    @Expose({ name: "slowest_tests_extra" })
    slowestTestsExtra: number;

    /**
     * Test counts grouped by pipeline number and workflow id
     */
    @SpeakeasyMetadata({ elemType: TestRuns })
    @Expose({ name: "test_runs" })
    @Type(() => TestRuns)
    testRuns: TestRuns[];

    /**
     * The total number of test runs
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_test_runs" })
    totalTestRuns: number;
}

export class GetProjectWorkflowTestMetricsResponse extends SpeakeasyBase {
    /**
     * A list of test metrics by workflow
     */
    @SpeakeasyMetadata()
    twoHundredApplicationJsonObject?: GetProjectWorkflowTestMetricsResponseBody;

    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Error response.
     */
    @SpeakeasyMetadata()
    defaultApplicationJsonObject?: GetProjectWorkflowTestMetricsInsightsResponseBody;
}
