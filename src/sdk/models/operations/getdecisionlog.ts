/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetDecisionLogRequest = {
    context: string;
    decisionID: string;
    ownerID: string;
};

/**
 * There was no decision log found for given decision_id, and owner_id.
 *
 * @remarks
 *
 */
export type GetDecisionLogPolicyManagementResponse404ResponseBody = {
    error: string;
};

/**
 * The request is malformed (e.g, a given path parameter is invalid)
 *
 * @remarks
 *
 */
export type GetDecisionLogResponseBody = {
    error: string;
};

export type GetDecisionLogResponse =
    | GetDecisionLogResponseBody
    | GetDecisionLogPolicyManagementResponse404ResponseBody
    | shared.DecisionLog;

/** @internal */
export const GetDecisionLogRequest$inboundSchema: z.ZodType<
    GetDecisionLogRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    context: z.string(),
    decisionID: z.string(),
    ownerID: z.string(),
});

/** @internal */
export type GetDecisionLogRequest$Outbound = {
    context: string;
    decisionID: string;
    ownerID: string;
};

/** @internal */
export const GetDecisionLogRequest$outboundSchema: z.ZodType<
    GetDecisionLogRequest$Outbound,
    z.ZodTypeDef,
    GetDecisionLogRequest
> = z.object({
    context: z.string(),
    decisionID: z.string(),
    ownerID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDecisionLogRequest$ {
    /** @deprecated use `GetDecisionLogRequest$inboundSchema` instead. */
    export const inboundSchema = GetDecisionLogRequest$inboundSchema;
    /** @deprecated use `GetDecisionLogRequest$outboundSchema` instead. */
    export const outboundSchema = GetDecisionLogRequest$outboundSchema;
    /** @deprecated use `GetDecisionLogRequest$Outbound` instead. */
    export type Outbound = GetDecisionLogRequest$Outbound;
}

/** @internal */
export const GetDecisionLogPolicyManagementResponse404ResponseBody$inboundSchema: z.ZodType<
    GetDecisionLogPolicyManagementResponse404ResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type GetDecisionLogPolicyManagementResponse404ResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const GetDecisionLogPolicyManagementResponse404ResponseBody$outboundSchema: z.ZodType<
    GetDecisionLogPolicyManagementResponse404ResponseBody$Outbound,
    z.ZodTypeDef,
    GetDecisionLogPolicyManagementResponse404ResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDecisionLogPolicyManagementResponse404ResponseBody$ {
    /** @deprecated use `GetDecisionLogPolicyManagementResponse404ResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        GetDecisionLogPolicyManagementResponse404ResponseBody$inboundSchema;
    /** @deprecated use `GetDecisionLogPolicyManagementResponse404ResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        GetDecisionLogPolicyManagementResponse404ResponseBody$outboundSchema;
    /** @deprecated use `GetDecisionLogPolicyManagementResponse404ResponseBody$Outbound` instead. */
    export type Outbound = GetDecisionLogPolicyManagementResponse404ResponseBody$Outbound;
}

/** @internal */
export const GetDecisionLogResponseBody$inboundSchema: z.ZodType<
    GetDecisionLogResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type GetDecisionLogResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const GetDecisionLogResponseBody$outboundSchema: z.ZodType<
    GetDecisionLogResponseBody$Outbound,
    z.ZodTypeDef,
    GetDecisionLogResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDecisionLogResponseBody$ {
    /** @deprecated use `GetDecisionLogResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetDecisionLogResponseBody$inboundSchema;
    /** @deprecated use `GetDecisionLogResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetDecisionLogResponseBody$outboundSchema;
    /** @deprecated use `GetDecisionLogResponseBody$Outbound` instead. */
    export type Outbound = GetDecisionLogResponseBody$Outbound;
}

/** @internal */
export const GetDecisionLogResponse$inboundSchema: z.ZodType<
    GetDecisionLogResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => GetDecisionLogResponseBody$inboundSchema),
    z.lazy(() => GetDecisionLogPolicyManagementResponse404ResponseBody$inboundSchema),
    shared.DecisionLog$inboundSchema,
]);

/** @internal */
export type GetDecisionLogResponse$Outbound =
    | GetDecisionLogResponseBody$Outbound
    | GetDecisionLogPolicyManagementResponse404ResponseBody$Outbound
    | shared.DecisionLog$Outbound;

/** @internal */
export const GetDecisionLogResponse$outboundSchema: z.ZodType<
    GetDecisionLogResponse$Outbound,
    z.ZodTypeDef,
    GetDecisionLogResponse
> = z.union([
    z.lazy(() => GetDecisionLogResponseBody$outboundSchema),
    z.lazy(() => GetDecisionLogPolicyManagementResponse404ResponseBody$outboundSchema),
    shared.DecisionLog$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDecisionLogResponse$ {
    /** @deprecated use `GetDecisionLogResponse$inboundSchema` instead. */
    export const inboundSchema = GetDecisionLogResponse$inboundSchema;
    /** @deprecated use `GetDecisionLogResponse$outboundSchema` instead. */
    export const outboundSchema = GetDecisionLogResponse$outboundSchema;
    /** @deprecated use `GetDecisionLogResponse$Outbound` instead. */
    export type Outbound = GetDecisionLogResponse$Outbound;
}
