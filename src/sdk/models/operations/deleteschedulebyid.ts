/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type DeleteScheduleByIdRequest = {
    /**
     * The unique ID of the schedule.
     */
    scheduleId: string;
};

/**
 * Error response.
 */
export type DeleteScheduleByIdResponseBody = {
    message?: string | undefined;
};

/**
 * message response
 */
export type DeleteScheduleByIdMessageResponse = {
    /**
     * A human-readable message
     */
    message: string;
};

export type DeleteScheduleByIdResponse =
    | DeleteScheduleByIdMessageResponse
    | DeleteScheduleByIdResponseBody;

/** @internal */
export const DeleteScheduleByIdRequest$inboundSchema: z.ZodType<
    DeleteScheduleByIdRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "schedule-id": z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            "schedule-id": "scheduleId",
        });
    });

/** @internal */
export type DeleteScheduleByIdRequest$Outbound = {
    "schedule-id": string;
};

/** @internal */
export const DeleteScheduleByIdRequest$outboundSchema: z.ZodType<
    DeleteScheduleByIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteScheduleByIdRequest
> = z
    .object({
        scheduleId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            scheduleId: "schedule-id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteScheduleByIdRequest$ {
    /** @deprecated use `DeleteScheduleByIdRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteScheduleByIdRequest$inboundSchema;
    /** @deprecated use `DeleteScheduleByIdRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteScheduleByIdRequest$outboundSchema;
    /** @deprecated use `DeleteScheduleByIdRequest$Outbound` instead. */
    export type Outbound = DeleteScheduleByIdRequest$Outbound;
}

/** @internal */
export const DeleteScheduleByIdResponseBody$inboundSchema: z.ZodType<
    DeleteScheduleByIdResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type DeleteScheduleByIdResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const DeleteScheduleByIdResponseBody$outboundSchema: z.ZodType<
    DeleteScheduleByIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteScheduleByIdResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteScheduleByIdResponseBody$ {
    /** @deprecated use `DeleteScheduleByIdResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteScheduleByIdResponseBody$inboundSchema;
    /** @deprecated use `DeleteScheduleByIdResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteScheduleByIdResponseBody$outboundSchema;
    /** @deprecated use `DeleteScheduleByIdResponseBody$Outbound` instead. */
    export type Outbound = DeleteScheduleByIdResponseBody$Outbound;
}

/** @internal */
export const DeleteScheduleByIdMessageResponse$inboundSchema: z.ZodType<
    DeleteScheduleByIdMessageResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string(),
});

/** @internal */
export type DeleteScheduleByIdMessageResponse$Outbound = {
    message: string;
};

/** @internal */
export const DeleteScheduleByIdMessageResponse$outboundSchema: z.ZodType<
    DeleteScheduleByIdMessageResponse$Outbound,
    z.ZodTypeDef,
    DeleteScheduleByIdMessageResponse
> = z.object({
    message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteScheduleByIdMessageResponse$ {
    /** @deprecated use `DeleteScheduleByIdMessageResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteScheduleByIdMessageResponse$inboundSchema;
    /** @deprecated use `DeleteScheduleByIdMessageResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteScheduleByIdMessageResponse$outboundSchema;
    /** @deprecated use `DeleteScheduleByIdMessageResponse$Outbound` instead. */
    export type Outbound = DeleteScheduleByIdMessageResponse$Outbound;
}

/** @internal */
export const DeleteScheduleByIdResponse$inboundSchema: z.ZodType<
    DeleteScheduleByIdResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => DeleteScheduleByIdMessageResponse$inboundSchema),
    z.lazy(() => DeleteScheduleByIdResponseBody$inboundSchema),
]);

/** @internal */
export type DeleteScheduleByIdResponse$Outbound =
    | DeleteScheduleByIdMessageResponse$Outbound
    | DeleteScheduleByIdResponseBody$Outbound;

/** @internal */
export const DeleteScheduleByIdResponse$outboundSchema: z.ZodType<
    DeleteScheduleByIdResponse$Outbound,
    z.ZodTypeDef,
    DeleteScheduleByIdResponse
> = z.union([
    z.lazy(() => DeleteScheduleByIdMessageResponse$outboundSchema),
    z.lazy(() => DeleteScheduleByIdResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteScheduleByIdResponse$ {
    /** @deprecated use `DeleteScheduleByIdResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteScheduleByIdResponse$inboundSchema;
    /** @deprecated use `DeleteScheduleByIdResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteScheduleByIdResponse$outboundSchema;
    /** @deprecated use `DeleteScheduleByIdResponse$Outbound` instead. */
    export type Outbound = DeleteScheduleByIdResponse$Outbound;
}
