/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetWorkflowSummaryRequest extends SpeakeasyBase {
    /**
     * Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=all-branches" })
    allBranches?: boolean;

    /**
     * The name of a vcs branch. If not passed we will scope the API call to the default branch.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=branch" })
    branch?: string;

    /**
     * Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=project-slug" })
    projectSlug: string;

    /**
     * The name of the workflow.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=workflow-name" })
    workflowName: string;
}

/**
 * Error response.
 */
export class GetWorkflowSummaryInsightsResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

/**
 * Metrics relating to the duration of runs for a workflow.
 */
export class DurationMetrics extends SpeakeasyBase {
    /**
     * The max duration, in seconds, among a group of runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "max" })
    max: number;

    /**
     * The mean duration, in seconds, among a group of runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "mean" })
    mean: number;

    /**
     * The median duration, in seconds, among a group of runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "median" })
    median: number;

    /**
     * The minimum duration, in seconds, among a group of runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "min" })
    min: number;

    /**
     * The 95th percentile duration, in seconds, among a group of runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "p95" })
    p95: number;

    /**
     * The standard deviation, in seconds, among a group of runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "standard_deviation" })
    standardDeviation: number;
}

/**
 * Metrics aggregated across a workflow for a given time window.
 */
export class Metrics extends SpeakeasyBase {
    /**
     * The number of runs that ran to completion within the aggregation window
     */
    @SpeakeasyMetadata()
    @Expose({ name: "completed_runs" })
    completedRuns: number;

    /**
     * Metrics relating to the duration of runs for a workflow.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "duration_metrics" })
    @Type(() => DurationMetrics)
    durationMetrics: DurationMetrics;

    /**
     * The number of failed runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "failed_runs" })
    failedRuns: number;

    /**
     * The mean time to recovery (mean time between failures and their next success) in seconds.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "mttr" })
    mttr: number;

    @SpeakeasyMetadata()
    @Expose({ name: "success_rate" })
    successRate: number;

    /**
     * The number of successful runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "successful_runs" })
    successfulRuns: number;

    /**
     * The average number of runs per day.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "throughput" })
    throughput: number;

    /**
     * The total credits consumed by the workflow in the aggregation window. Note that Insights is not a real time financial reporting tool and should not be used for credit reporting.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_credits_used" })
    totalCreditsUsed: number;

    /**
     * The total number of runs, including runs that are still on-hold or running.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_runs" })
    totalRuns: number;

    /**
     * The timestamp of the last build within the requested reporting window.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "window_end" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    windowEnd: Date;

    /**
     * The timestamp of the first build within the requested reporting window.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "window_start" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    windowStart: Date;
}

/**
 * Trends for aggregated metrics across a workflow for a given time window.
 */
export class Trends extends SpeakeasyBase {
    /**
     * The trend value for number of failed runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "failed_runs" })
    failedRuns: number;

    /**
     * Trend value for the 50th percentile duration for a workflow for a given time window.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "median_duration_secs" })
    medianDurationSecs: number;

    /**
     * trend for mean time to recovery (mean time between failures and their next success).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "mttr" })
    mttr: number;

    /**
     * Trend value for the 95th percentile duration for a workflow for a given time window.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "p95_duration_secs" })
    p95DurationSecs: number;

    /**
     * The trend value for the success rate.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "success_rate" })
    successRate: number;

    /**
     * Trend value for the average number of runs per day.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "throughput" })
    throughput: number;

    /**
     * The trend value for total credits consumed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_credits_used" })
    totalCreditsUsed: number;

    /**
     * The trend value for total number of runs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_runs" })
    totalRuns: number;
}

/**
 * Workflow level aggregated metrics and trends response
 */
export class GetWorkflowSummaryResponseBody extends SpeakeasyBase {
    /**
     * Metrics aggregated across a workflow for a given time window.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "metrics" })
    @Type(() => Metrics)
    metrics: Metrics;

    /**
     * Trends for aggregated metrics across a workflow for a given time window.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "trends" })
    @Type(() => Trends)
    trends: Trends;

    /**
     * A list of all the workflow names for a given project.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "workflow_names" })
    workflowNames: string[];
}

export class GetWorkflowSummaryResponse extends SpeakeasyBase {
    /**
     * Metrics and trends for a workflow
     */
    @SpeakeasyMetadata()
    twoHundredApplicationJsonObject?: GetWorkflowSummaryResponseBody;

    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Error response.
     */
    @SpeakeasyMetadata()
    defaultApplicationJsonObject?: GetWorkflowSummaryInsightsResponseBody;
}
