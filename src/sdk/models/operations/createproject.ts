/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type CreateProjectRequest = {
    /**
     * The `organization` segment of a project or org slug, the second of the three. For GitHub OAuth or Bitbucket projects, this is the organization name. For projects that use GitLab or GitHub App, use the organization ID (found in Organization Settings).
     */
    organization: string;
    /**
     * The `project` segment of a project slug, the third of the three. For GitHub OAuth or Bitbucket projects, this is the repository name. For projects that use GitLab or GitHub App, use the project ID (found in Project Settings).
     */
    project: string;
    /**
     * The `provider` segment of a project or org slug, the first of the three. This may be a VCS. For projects that use GitLab or GitHub App, use `circleci`.
     */
    provider: string;
};

/**
 * Either a branch or a project were not found.
 */
export type CreateProjectProjectResponse404ResponseBody = {
    message?: string | undefined;
};

/**
 * Unexpected request body provided.
 */
export type CreateProjectResponseBody = {
    message?: string | undefined;
};

export type CreateProjectResponse =
    | CreateProjectResponseBody
    | CreateProjectProjectResponse404ResponseBody
    | shared.ProjectSettings;

/** @internal */
export const CreateProjectRequest$inboundSchema: z.ZodType<
    CreateProjectRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    organization: z.string(),
    project: z.string(),
    provider: z.string(),
});

/** @internal */
export type CreateProjectRequest$Outbound = {
    organization: string;
    project: string;
    provider: string;
};

/** @internal */
export const CreateProjectRequest$outboundSchema: z.ZodType<
    CreateProjectRequest$Outbound,
    z.ZodTypeDef,
    CreateProjectRequest
> = z.object({
    organization: z.string(),
    project: z.string(),
    provider: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectRequest$ {
    /** @deprecated use `CreateProjectRequest$inboundSchema` instead. */
    export const inboundSchema = CreateProjectRequest$inboundSchema;
    /** @deprecated use `CreateProjectRequest$outboundSchema` instead. */
    export const outboundSchema = CreateProjectRequest$outboundSchema;
    /** @deprecated use `CreateProjectRequest$Outbound` instead. */
    export type Outbound = CreateProjectRequest$Outbound;
}

/** @internal */
export const CreateProjectProjectResponse404ResponseBody$inboundSchema: z.ZodType<
    CreateProjectProjectResponse404ResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type CreateProjectProjectResponse404ResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const CreateProjectProjectResponse404ResponseBody$outboundSchema: z.ZodType<
    CreateProjectProjectResponse404ResponseBody$Outbound,
    z.ZodTypeDef,
    CreateProjectProjectResponse404ResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectProjectResponse404ResponseBody$ {
    /** @deprecated use `CreateProjectProjectResponse404ResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateProjectProjectResponse404ResponseBody$inboundSchema;
    /** @deprecated use `CreateProjectProjectResponse404ResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateProjectProjectResponse404ResponseBody$outboundSchema;
    /** @deprecated use `CreateProjectProjectResponse404ResponseBody$Outbound` instead. */
    export type Outbound = CreateProjectProjectResponse404ResponseBody$Outbound;
}

/** @internal */
export const CreateProjectResponseBody$inboundSchema: z.ZodType<
    CreateProjectResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().default("Unexpected request body provided."),
});

/** @internal */
export type CreateProjectResponseBody$Outbound = {
    message: string;
};

/** @internal */
export const CreateProjectResponseBody$outboundSchema: z.ZodType<
    CreateProjectResponseBody$Outbound,
    z.ZodTypeDef,
    CreateProjectResponseBody
> = z.object({
    message: z.string().default("Unexpected request body provided."),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectResponseBody$ {
    /** @deprecated use `CreateProjectResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateProjectResponseBody$inboundSchema;
    /** @deprecated use `CreateProjectResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateProjectResponseBody$outboundSchema;
    /** @deprecated use `CreateProjectResponseBody$Outbound` instead. */
    export type Outbound = CreateProjectResponseBody$Outbound;
}

/** @internal */
export const CreateProjectResponse$inboundSchema: z.ZodType<
    CreateProjectResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => CreateProjectResponseBody$inboundSchema),
    z.lazy(() => CreateProjectProjectResponse404ResponseBody$inboundSchema),
    shared.ProjectSettings$inboundSchema,
]);

/** @internal */
export type CreateProjectResponse$Outbound =
    | CreateProjectResponseBody$Outbound
    | CreateProjectProjectResponse404ResponseBody$Outbound
    | shared.ProjectSettings$Outbound;

/** @internal */
export const CreateProjectResponse$outboundSchema: z.ZodType<
    CreateProjectResponse$Outbound,
    z.ZodTypeDef,
    CreateProjectResponse
> = z.union([
    z.lazy(() => CreateProjectResponseBody$outboundSchema),
    z.lazy(() => CreateProjectProjectResponse404ResponseBody$outboundSchema),
    shared.ProjectSettings$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectResponse$ {
    /** @deprecated use `CreateProjectResponse$inboundSchema` instead. */
    export const inboundSchema = CreateProjectResponse$inboundSchema;
    /** @deprecated use `CreateProjectResponse$outboundSchema` instead. */
    export const outboundSchema = CreateProjectResponse$outboundSchema;
    /** @deprecated use `CreateProjectResponse$Outbound` instead. */
    export type Outbound = CreateProjectResponse$Outbound;
}
