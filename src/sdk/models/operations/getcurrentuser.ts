/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Error response.
 */
export type GetCurrentUserResponseBody = {
    message?: string | undefined;
};

/**
 * User login information.
 */
export type GetCurrentUserUser = {
    /**
     * The unique ID of the user.
     */
    id: string;
    /**
     * The login information for the user on the VCS.
     */
    login: string;
    /**
     * The name of the user.
     */
    name: string;
};

export type GetCurrentUserResponse = GetCurrentUserResponseBody | GetCurrentUserUser;

/** @internal */
export const GetCurrentUserResponseBody$inboundSchema: z.ZodType<
    GetCurrentUserResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type GetCurrentUserResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const GetCurrentUserResponseBody$outboundSchema: z.ZodType<
    GetCurrentUserResponseBody$Outbound,
    z.ZodTypeDef,
    GetCurrentUserResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentUserResponseBody$ {
    /** @deprecated use `GetCurrentUserResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetCurrentUserResponseBody$inboundSchema;
    /** @deprecated use `GetCurrentUserResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetCurrentUserResponseBody$outboundSchema;
    /** @deprecated use `GetCurrentUserResponseBody$Outbound` instead. */
    export type Outbound = GetCurrentUserResponseBody$Outbound;
}

/** @internal */
export const GetCurrentUserUser$inboundSchema: z.ZodType<
    GetCurrentUserUser,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
    login: z.string(),
    name: z.string(),
});

/** @internal */
export type GetCurrentUserUser$Outbound = {
    id: string;
    login: string;
    name: string;
};

/** @internal */
export const GetCurrentUserUser$outboundSchema: z.ZodType<
    GetCurrentUserUser$Outbound,
    z.ZodTypeDef,
    GetCurrentUserUser
> = z.object({
    id: z.string(),
    login: z.string(),
    name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentUserUser$ {
    /** @deprecated use `GetCurrentUserUser$inboundSchema` instead. */
    export const inboundSchema = GetCurrentUserUser$inboundSchema;
    /** @deprecated use `GetCurrentUserUser$outboundSchema` instead. */
    export const outboundSchema = GetCurrentUserUser$outboundSchema;
    /** @deprecated use `GetCurrentUserUser$Outbound` instead. */
    export type Outbound = GetCurrentUserUser$Outbound;
}

/** @internal */
export const GetCurrentUserResponse$inboundSchema: z.ZodType<
    GetCurrentUserResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => GetCurrentUserResponseBody$inboundSchema),
    z.lazy(() => GetCurrentUserUser$inboundSchema),
]);

/** @internal */
export type GetCurrentUserResponse$Outbound =
    | GetCurrentUserResponseBody$Outbound
    | GetCurrentUserUser$Outbound;

/** @internal */
export const GetCurrentUserResponse$outboundSchema: z.ZodType<
    GetCurrentUserResponse$Outbound,
    z.ZodTypeDef,
    GetCurrentUserResponse
> = z.union([
    z.lazy(() => GetCurrentUserResponseBody$outboundSchema),
    z.lazy(() => GetCurrentUserUser$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentUserResponse$ {
    /** @deprecated use `GetCurrentUserResponse$inboundSchema` instead. */
    export const inboundSchema = GetCurrentUserResponse$inboundSchema;
    /** @deprecated use `GetCurrentUserResponse$outboundSchema` instead. */
    export const outboundSchema = GetCurrentUserResponse$outboundSchema;
    /** @deprecated use `GetCurrentUserResponse$Outbound` instead. */
    export type Outbound = GetCurrentUserResponse$Outbound;
}
