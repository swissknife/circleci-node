/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PatchProjectSettingsRequest extends SpeakeasyBase {
    /**
     * The `organization` segment of a project or org slug, the second of the three. For GitHub OAuth or Bitbucket projects, this is the organization name. For projects that use GitLab or GitHub App, use the organization ID (found in Organization Settings).
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=organization" })
    organization: string;

    /**
     * The `project` segment of a project slug, the third of the three. For GitHub OAuth or Bitbucket projects, this is the repository name. For projects that use GitLab or GitHub App, use the project ID (found in Project Settings).
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=project" })
    project: string;

    /**
     * The setting(s) to update, including one or more fields in the JSON object. Note that `oss: true` will only be set on projects whose underlying repositories are actually open source.
     */
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    projectSettings: shared.ProjectSettings;

    /**
     * The `provider` segment of a project or org slug, the first of the three. This may be a VCS. For projects that use GitLab or GitHub App, use `circleci`.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=provider" })
    provider: string;
}

/**
 * Credentials provided are invalid.
 */
export class PatchProjectSettingsProjectResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

/**
 * Request is malformed, e.g. with improperly encoded JSON
 */
export class PatchProjectSettingsResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

export class PatchProjectSettingsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Request is malformed, e.g. with improperly encoded JSON
     */
    @SpeakeasyMetadata()
    object?: PatchProjectSettingsResponseBody;

    /**
     * Credentials provided are invalid.
     */
    @SpeakeasyMetadata()
    object1?: PatchProjectSettingsProjectResponseBody;

    /**
     * Successful response. Always includes the full advanced settings object. Returned even when the provided updates match the existing settings, but can also be returned when `oss: true` fails to set.
     */
    @SpeakeasyMetadata()
    projectSettings?: shared.ProjectSettings;
}
