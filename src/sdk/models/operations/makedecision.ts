/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type Metadata = {};

export type MakeDecisionRequestBody = {
    input: string;
    metadata?: Metadata | undefined;
};

export type MakeDecisionRequest = {
    requestBody?: MakeDecisionRequestBody | undefined;
    context: string;
    ownerID: string;
};

/**
 * Something unexpected happened on the server.
 */
export type MakeDecisionPolicyManagementResponseResponseBody = {
    error: string;
};

/**
 * The request is unauthorized
 *
 * @remarks
 *
 */
export type MakeDecisionPolicyManagementResponseBody = {
    error: string;
};

/**
 * The request is malformed
 *
 * @remarks
 *
 */
export type MakeDecisionResponseBody = {
    error: string;
};

export type MakeDecisionResponse =
    | MakeDecisionResponseBody
    | MakeDecisionPolicyManagementResponseBody
    | MakeDecisionPolicyManagementResponseResponseBody
    | shared.Decision;

/** @internal */
export const Metadata$inboundSchema: z.ZodType<Metadata, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Metadata$Outbound = {};

/** @internal */
export const Metadata$outboundSchema: z.ZodType<Metadata$Outbound, z.ZodTypeDef, Metadata> =
    z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Metadata$ {
    /** @deprecated use `Metadata$inboundSchema` instead. */
    export const inboundSchema = Metadata$inboundSchema;
    /** @deprecated use `Metadata$outboundSchema` instead. */
    export const outboundSchema = Metadata$outboundSchema;
    /** @deprecated use `Metadata$Outbound` instead. */
    export type Outbound = Metadata$Outbound;
}

/** @internal */
export const MakeDecisionRequestBody$inboundSchema: z.ZodType<
    MakeDecisionRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    input: z.string(),
    metadata: z.lazy(() => Metadata$inboundSchema).optional(),
});

/** @internal */
export type MakeDecisionRequestBody$Outbound = {
    input: string;
    metadata?: Metadata$Outbound | undefined;
};

/** @internal */
export const MakeDecisionRequestBody$outboundSchema: z.ZodType<
    MakeDecisionRequestBody$Outbound,
    z.ZodTypeDef,
    MakeDecisionRequestBody
> = z.object({
    input: z.string(),
    metadata: z.lazy(() => Metadata$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MakeDecisionRequestBody$ {
    /** @deprecated use `MakeDecisionRequestBody$inboundSchema` instead. */
    export const inboundSchema = MakeDecisionRequestBody$inboundSchema;
    /** @deprecated use `MakeDecisionRequestBody$outboundSchema` instead. */
    export const outboundSchema = MakeDecisionRequestBody$outboundSchema;
    /** @deprecated use `MakeDecisionRequestBody$Outbound` instead. */
    export type Outbound = MakeDecisionRequestBody$Outbound;
}

/** @internal */
export const MakeDecisionRequest$inboundSchema: z.ZodType<
    MakeDecisionRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: z.lazy(() => MakeDecisionRequestBody$inboundSchema).optional(),
        context: z.string(),
        ownerID: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type MakeDecisionRequest$Outbound = {
    RequestBody?: MakeDecisionRequestBody$Outbound | undefined;
    context: string;
    ownerID: string;
};

/** @internal */
export const MakeDecisionRequest$outboundSchema: z.ZodType<
    MakeDecisionRequest$Outbound,
    z.ZodTypeDef,
    MakeDecisionRequest
> = z
    .object({
        requestBody: z.lazy(() => MakeDecisionRequestBody$outboundSchema).optional(),
        context: z.string(),
        ownerID: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MakeDecisionRequest$ {
    /** @deprecated use `MakeDecisionRequest$inboundSchema` instead. */
    export const inboundSchema = MakeDecisionRequest$inboundSchema;
    /** @deprecated use `MakeDecisionRequest$outboundSchema` instead. */
    export const outboundSchema = MakeDecisionRequest$outboundSchema;
    /** @deprecated use `MakeDecisionRequest$Outbound` instead. */
    export type Outbound = MakeDecisionRequest$Outbound;
}

/** @internal */
export const MakeDecisionPolicyManagementResponseResponseBody$inboundSchema: z.ZodType<
    MakeDecisionPolicyManagementResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type MakeDecisionPolicyManagementResponseResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const MakeDecisionPolicyManagementResponseResponseBody$outboundSchema: z.ZodType<
    MakeDecisionPolicyManagementResponseResponseBody$Outbound,
    z.ZodTypeDef,
    MakeDecisionPolicyManagementResponseResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MakeDecisionPolicyManagementResponseResponseBody$ {
    /** @deprecated use `MakeDecisionPolicyManagementResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema = MakeDecisionPolicyManagementResponseResponseBody$inboundSchema;
    /** @deprecated use `MakeDecisionPolicyManagementResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema = MakeDecisionPolicyManagementResponseResponseBody$outboundSchema;
    /** @deprecated use `MakeDecisionPolicyManagementResponseResponseBody$Outbound` instead. */
    export type Outbound = MakeDecisionPolicyManagementResponseResponseBody$Outbound;
}

/** @internal */
export const MakeDecisionPolicyManagementResponseBody$inboundSchema: z.ZodType<
    MakeDecisionPolicyManagementResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type MakeDecisionPolicyManagementResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const MakeDecisionPolicyManagementResponseBody$outboundSchema: z.ZodType<
    MakeDecisionPolicyManagementResponseBody$Outbound,
    z.ZodTypeDef,
    MakeDecisionPolicyManagementResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MakeDecisionPolicyManagementResponseBody$ {
    /** @deprecated use `MakeDecisionPolicyManagementResponseBody$inboundSchema` instead. */
    export const inboundSchema = MakeDecisionPolicyManagementResponseBody$inboundSchema;
    /** @deprecated use `MakeDecisionPolicyManagementResponseBody$outboundSchema` instead. */
    export const outboundSchema = MakeDecisionPolicyManagementResponseBody$outboundSchema;
    /** @deprecated use `MakeDecisionPolicyManagementResponseBody$Outbound` instead. */
    export type Outbound = MakeDecisionPolicyManagementResponseBody$Outbound;
}

/** @internal */
export const MakeDecisionResponseBody$inboundSchema: z.ZodType<
    MakeDecisionResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type MakeDecisionResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const MakeDecisionResponseBody$outboundSchema: z.ZodType<
    MakeDecisionResponseBody$Outbound,
    z.ZodTypeDef,
    MakeDecisionResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MakeDecisionResponseBody$ {
    /** @deprecated use `MakeDecisionResponseBody$inboundSchema` instead. */
    export const inboundSchema = MakeDecisionResponseBody$inboundSchema;
    /** @deprecated use `MakeDecisionResponseBody$outboundSchema` instead. */
    export const outboundSchema = MakeDecisionResponseBody$outboundSchema;
    /** @deprecated use `MakeDecisionResponseBody$Outbound` instead. */
    export type Outbound = MakeDecisionResponseBody$Outbound;
}

/** @internal */
export const MakeDecisionResponse$inboundSchema: z.ZodType<
    MakeDecisionResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => MakeDecisionResponseBody$inboundSchema),
    z.lazy(() => MakeDecisionPolicyManagementResponseBody$inboundSchema),
    z.lazy(() => MakeDecisionPolicyManagementResponseResponseBody$inboundSchema),
    shared.Decision$inboundSchema,
]);

/** @internal */
export type MakeDecisionResponse$Outbound =
    | MakeDecisionResponseBody$Outbound
    | MakeDecisionPolicyManagementResponseBody$Outbound
    | MakeDecisionPolicyManagementResponseResponseBody$Outbound
    | shared.Decision$Outbound;

/** @internal */
export const MakeDecisionResponse$outboundSchema: z.ZodType<
    MakeDecisionResponse$Outbound,
    z.ZodTypeDef,
    MakeDecisionResponse
> = z.union([
    z.lazy(() => MakeDecisionResponseBody$outboundSchema),
    z.lazy(() => MakeDecisionPolicyManagementResponseBody$outboundSchema),
    z.lazy(() => MakeDecisionPolicyManagementResponseResponseBody$outboundSchema),
    shared.Decision$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MakeDecisionResponse$ {
    /** @deprecated use `MakeDecisionResponse$inboundSchema` instead. */
    export const inboundSchema = MakeDecisionResponse$inboundSchema;
    /** @deprecated use `MakeDecisionResponse$outboundSchema` instead. */
    export const outboundSchema = MakeDecisionResponse$outboundSchema;
    /** @deprecated use `MakeDecisionResponse$Outbound` instead. */
    export type Outbound = MakeDecisionResponse$Outbound;
}
