/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetOrgClaimsRequest = {
    orgID: string;
};

/**
 * The request is malformed (e.g, a given path parameter is invalid)
 *
 * @remarks
 *
 */
export type GetOrgClaimsResponseBody = {
    error: string;
};

export type GetOrgClaimsResponse = GetOrgClaimsResponseBody | shared.ClaimResponse;

/** @internal */
export const GetOrgClaimsRequest$inboundSchema: z.ZodType<
    GetOrgClaimsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    orgID: z.string(),
});

/** @internal */
export type GetOrgClaimsRequest$Outbound = {
    orgID: string;
};

/** @internal */
export const GetOrgClaimsRequest$outboundSchema: z.ZodType<
    GetOrgClaimsRequest$Outbound,
    z.ZodTypeDef,
    GetOrgClaimsRequest
> = z.object({
    orgID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrgClaimsRequest$ {
    /** @deprecated use `GetOrgClaimsRequest$inboundSchema` instead. */
    export const inboundSchema = GetOrgClaimsRequest$inboundSchema;
    /** @deprecated use `GetOrgClaimsRequest$outboundSchema` instead. */
    export const outboundSchema = GetOrgClaimsRequest$outboundSchema;
    /** @deprecated use `GetOrgClaimsRequest$Outbound` instead. */
    export type Outbound = GetOrgClaimsRequest$Outbound;
}

/** @internal */
export const GetOrgClaimsResponseBody$inboundSchema: z.ZodType<
    GetOrgClaimsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type GetOrgClaimsResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const GetOrgClaimsResponseBody$outboundSchema: z.ZodType<
    GetOrgClaimsResponseBody$Outbound,
    z.ZodTypeDef,
    GetOrgClaimsResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrgClaimsResponseBody$ {
    /** @deprecated use `GetOrgClaimsResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetOrgClaimsResponseBody$inboundSchema;
    /** @deprecated use `GetOrgClaimsResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetOrgClaimsResponseBody$outboundSchema;
    /** @deprecated use `GetOrgClaimsResponseBody$Outbound` instead. */
    export type Outbound = GetOrgClaimsResponseBody$Outbound;
}

/** @internal */
export const GetOrgClaimsResponse$inboundSchema: z.ZodType<
    GetOrgClaimsResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => GetOrgClaimsResponseBody$inboundSchema),
    shared.ClaimResponse$inboundSchema,
]);

/** @internal */
export type GetOrgClaimsResponse$Outbound =
    | GetOrgClaimsResponseBody$Outbound
    | shared.ClaimResponse$Outbound;

/** @internal */
export const GetOrgClaimsResponse$outboundSchema: z.ZodType<
    GetOrgClaimsResponse$Outbound,
    z.ZodTypeDef,
    GetOrgClaimsResponse
> = z.union([
    z.lazy(() => GetOrgClaimsResponseBody$outboundSchema),
    shared.ClaimResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrgClaimsResponse$ {
    /** @deprecated use `GetOrgClaimsResponse$inboundSchema` instead. */
    export const inboundSchema = GetOrgClaimsResponse$inboundSchema;
    /** @deprecated use `GetOrgClaimsResponse$outboundSchema` instead. */
    export const outboundSchema = GetOrgClaimsResponse$outboundSchema;
    /** @deprecated use `GetOrgClaimsResponse$Outbound` instead. */
    export type Outbound = GetOrgClaimsResponse$Outbound;
}
