/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type DeleteContextRequest = {
    /**
     * ID of the context (UUID)
     */
    contextId: string;
};

/**
 * Error response.
 */
export type DeleteContextResponseBody = {
    message?: string | undefined;
};

/**
 * message response
 */
export type DeleteContextMessageResponse = {
    /**
     * A human-readable message
     */
    message: string;
};

export type DeleteContextResponse = DeleteContextMessageResponse | DeleteContextResponseBody;

/** @internal */
export const DeleteContextRequest$inboundSchema: z.ZodType<
    DeleteContextRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "context-id": z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            "context-id": "contextId",
        });
    });

/** @internal */
export type DeleteContextRequest$Outbound = {
    "context-id": string;
};

/** @internal */
export const DeleteContextRequest$outboundSchema: z.ZodType<
    DeleteContextRequest$Outbound,
    z.ZodTypeDef,
    DeleteContextRequest
> = z
    .object({
        contextId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            contextId: "context-id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteContextRequest$ {
    /** @deprecated use `DeleteContextRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteContextRequest$inboundSchema;
    /** @deprecated use `DeleteContextRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteContextRequest$outboundSchema;
    /** @deprecated use `DeleteContextRequest$Outbound` instead. */
    export type Outbound = DeleteContextRequest$Outbound;
}

/** @internal */
export const DeleteContextResponseBody$inboundSchema: z.ZodType<
    DeleteContextResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type DeleteContextResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const DeleteContextResponseBody$outboundSchema: z.ZodType<
    DeleteContextResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteContextResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteContextResponseBody$ {
    /** @deprecated use `DeleteContextResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteContextResponseBody$inboundSchema;
    /** @deprecated use `DeleteContextResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteContextResponseBody$outboundSchema;
    /** @deprecated use `DeleteContextResponseBody$Outbound` instead. */
    export type Outbound = DeleteContextResponseBody$Outbound;
}

/** @internal */
export const DeleteContextMessageResponse$inboundSchema: z.ZodType<
    DeleteContextMessageResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string(),
});

/** @internal */
export type DeleteContextMessageResponse$Outbound = {
    message: string;
};

/** @internal */
export const DeleteContextMessageResponse$outboundSchema: z.ZodType<
    DeleteContextMessageResponse$Outbound,
    z.ZodTypeDef,
    DeleteContextMessageResponse
> = z.object({
    message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteContextMessageResponse$ {
    /** @deprecated use `DeleteContextMessageResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteContextMessageResponse$inboundSchema;
    /** @deprecated use `DeleteContextMessageResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteContextMessageResponse$outboundSchema;
    /** @deprecated use `DeleteContextMessageResponse$Outbound` instead. */
    export type Outbound = DeleteContextMessageResponse$Outbound;
}

/** @internal */
export const DeleteContextResponse$inboundSchema: z.ZodType<
    DeleteContextResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => DeleteContextMessageResponse$inboundSchema),
    z.lazy(() => DeleteContextResponseBody$inboundSchema),
]);

/** @internal */
export type DeleteContextResponse$Outbound =
    | DeleteContextMessageResponse$Outbound
    | DeleteContextResponseBody$Outbound;

/** @internal */
export const DeleteContextResponse$outboundSchema: z.ZodType<
    DeleteContextResponse$Outbound,
    z.ZodTypeDef,
    DeleteContextResponse
> = z.union([
    z.lazy(() => DeleteContextMessageResponse$outboundSchema),
    z.lazy(() => DeleteContextResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteContextResponse$ {
    /** @deprecated use `DeleteContextResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteContextResponse$inboundSchema;
    /** @deprecated use `DeleteContextResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteContextResponse$outboundSchema;
    /** @deprecated use `DeleteContextResponse$Outbound` instead. */
    export type Outbound = DeleteContextResponse$Outbound;
}
