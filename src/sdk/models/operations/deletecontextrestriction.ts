/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type DeleteContextRestrictionRequest = {
    /**
     * An opaque identifier of a context.
     */
    contextId: string;
    /**
     * An opaque identifier of a context restriction.
     */
    restrictionId: string;
};

/**
 * Context restriction ID provided is invalid.
 */
export type DeleteContextRestrictionResponseBody = {
    message?: string | undefined;
};

export type DeleteContextRestrictionResponse =
    | DeleteContextRestrictionResponseBody
    | shared.RestrictionDeleted;

/** @internal */
export const DeleteContextRestrictionRequest$inboundSchema: z.ZodType<
    DeleteContextRestrictionRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        context_id: z.string(),
        restriction_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            context_id: "contextId",
            restriction_id: "restrictionId",
        });
    });

/** @internal */
export type DeleteContextRestrictionRequest$Outbound = {
    context_id: string;
    restriction_id: string;
};

/** @internal */
export const DeleteContextRestrictionRequest$outboundSchema: z.ZodType<
    DeleteContextRestrictionRequest$Outbound,
    z.ZodTypeDef,
    DeleteContextRestrictionRequest
> = z
    .object({
        contextId: z.string(),
        restrictionId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            contextId: "context_id",
            restrictionId: "restriction_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteContextRestrictionRequest$ {
    /** @deprecated use `DeleteContextRestrictionRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteContextRestrictionRequest$inboundSchema;
    /** @deprecated use `DeleteContextRestrictionRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteContextRestrictionRequest$outboundSchema;
    /** @deprecated use `DeleteContextRestrictionRequest$Outbound` instead. */
    export type Outbound = DeleteContextRestrictionRequest$Outbound;
}

/** @internal */
export const DeleteContextRestrictionResponseBody$inboundSchema: z.ZodType<
    DeleteContextRestrictionResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().default("restriction_id is invalid."),
});

/** @internal */
export type DeleteContextRestrictionResponseBody$Outbound = {
    message: string;
};

/** @internal */
export const DeleteContextRestrictionResponseBody$outboundSchema: z.ZodType<
    DeleteContextRestrictionResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteContextRestrictionResponseBody
> = z.object({
    message: z.string().default("restriction_id is invalid."),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteContextRestrictionResponseBody$ {
    /** @deprecated use `DeleteContextRestrictionResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteContextRestrictionResponseBody$inboundSchema;
    /** @deprecated use `DeleteContextRestrictionResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteContextRestrictionResponseBody$outboundSchema;
    /** @deprecated use `DeleteContextRestrictionResponseBody$Outbound` instead. */
    export type Outbound = DeleteContextRestrictionResponseBody$Outbound;
}

/** @internal */
export const DeleteContextRestrictionResponse$inboundSchema: z.ZodType<
    DeleteContextRestrictionResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => DeleteContextRestrictionResponseBody$inboundSchema),
    shared.RestrictionDeleted$inboundSchema,
]);

/** @internal */
export type DeleteContextRestrictionResponse$Outbound =
    | DeleteContextRestrictionResponseBody$Outbound
    | shared.RestrictionDeleted$Outbound;

/** @internal */
export const DeleteContextRestrictionResponse$outboundSchema: z.ZodType<
    DeleteContextRestrictionResponse$Outbound,
    z.ZodTypeDef,
    DeleteContextRestrictionResponse
> = z.union([
    z.lazy(() => DeleteContextRestrictionResponseBody$outboundSchema),
    shared.RestrictionDeleted$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteContextRestrictionResponse$ {
    /** @deprecated use `DeleteContextRestrictionResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteContextRestrictionResponse$inboundSchema;
    /** @deprecated use `DeleteContextRestrictionResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteContextRestrictionResponse$outboundSchema;
    /** @deprecated use `DeleteContextRestrictionResponse$Outbound` instead. */
    export type Outbound = DeleteContextRestrictionResponse$Outbound;
}
