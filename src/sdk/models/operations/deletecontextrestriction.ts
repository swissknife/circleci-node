/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class DeleteContextRestrictionRequest extends SpeakeasyBase {
    /**
     * An opaque identifier of a context.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=context_id" })
    contextId: string;

    /**
     * An opaque identifier of a context restriction.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=restriction_id" })
    restrictionId: string;
}

/**
 * Context restriction ID provided is invalid.
 */
export class DeleteContextRestrictionResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

export class DeleteContextRestrictionResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Context restriction ID provided is invalid.
     */
    @SpeakeasyMetadata()
    object?: DeleteContextRestrictionResponseBody;

    /**
     * Successful response.
     */
    @SpeakeasyMetadata()
    restrictionDeleted?: shared.RestrictionDeleted;
}
