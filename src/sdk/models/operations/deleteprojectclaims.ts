/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type DeleteProjectClaimsRequest = {
    /**
     * comma separated list of claims to delete. Valid values are "audience" and "ttl".
     */
    claims: string;
    orgID: string;
    projectID: string;
};

/**
 * The request is malformed (e.g, a given path parameter is invalid)
 *
 * @remarks
 *
 */
export type DeleteProjectClaimsResponseBody = {
    error: string;
};

export type DeleteProjectClaimsResponse = DeleteProjectClaimsResponseBody | shared.ClaimResponse;

/** @internal */
export const DeleteProjectClaimsRequest$inboundSchema: z.ZodType<
    DeleteProjectClaimsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    claims: z.string(),
    orgID: z.string(),
    projectID: z.string(),
});

/** @internal */
export type DeleteProjectClaimsRequest$Outbound = {
    claims: string;
    orgID: string;
    projectID: string;
};

/** @internal */
export const DeleteProjectClaimsRequest$outboundSchema: z.ZodType<
    DeleteProjectClaimsRequest$Outbound,
    z.ZodTypeDef,
    DeleteProjectClaimsRequest
> = z.object({
    claims: z.string(),
    orgID: z.string(),
    projectID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteProjectClaimsRequest$ {
    /** @deprecated use `DeleteProjectClaimsRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteProjectClaimsRequest$inboundSchema;
    /** @deprecated use `DeleteProjectClaimsRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteProjectClaimsRequest$outboundSchema;
    /** @deprecated use `DeleteProjectClaimsRequest$Outbound` instead. */
    export type Outbound = DeleteProjectClaimsRequest$Outbound;
}

/** @internal */
export const DeleteProjectClaimsResponseBody$inboundSchema: z.ZodType<
    DeleteProjectClaimsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type DeleteProjectClaimsResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const DeleteProjectClaimsResponseBody$outboundSchema: z.ZodType<
    DeleteProjectClaimsResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteProjectClaimsResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteProjectClaimsResponseBody$ {
    /** @deprecated use `DeleteProjectClaimsResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteProjectClaimsResponseBody$inboundSchema;
    /** @deprecated use `DeleteProjectClaimsResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteProjectClaimsResponseBody$outboundSchema;
    /** @deprecated use `DeleteProjectClaimsResponseBody$Outbound` instead. */
    export type Outbound = DeleteProjectClaimsResponseBody$Outbound;
}

/** @internal */
export const DeleteProjectClaimsResponse$inboundSchema: z.ZodType<
    DeleteProjectClaimsResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => DeleteProjectClaimsResponseBody$inboundSchema),
    shared.ClaimResponse$inboundSchema,
]);

/** @internal */
export type DeleteProjectClaimsResponse$Outbound =
    | DeleteProjectClaimsResponseBody$Outbound
    | shared.ClaimResponse$Outbound;

/** @internal */
export const DeleteProjectClaimsResponse$outboundSchema: z.ZodType<
    DeleteProjectClaimsResponse$Outbound,
    z.ZodTypeDef,
    DeleteProjectClaimsResponse
> = z.union([
    z.lazy(() => DeleteProjectClaimsResponseBody$outboundSchema),
    shared.ClaimResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteProjectClaimsResponse$ {
    /** @deprecated use `DeleteProjectClaimsResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteProjectClaimsResponse$inboundSchema;
    /** @deprecated use `DeleteProjectClaimsResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteProjectClaimsResponse$outboundSchema;
    /** @deprecated use `DeleteProjectClaimsResponse$Outbound` instead. */
    export type Outbound = DeleteProjectClaimsResponse$Outbound;
}
