/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of checkout key to create. This may be either `deploy-key` or `user-key`.
 */
export const CheckoutKeyInputType = {
    UserKey: "user-key",
    DeployKey: "deploy-key",
} as const;
/**
 * The type of checkout key to create. This may be either `deploy-key` or `user-key`.
 */
export type CheckoutKeyInputType = ClosedEnum<typeof CheckoutKeyInputType>;

export type CreateCheckoutKeyCheckoutKeyInput = {
    /**
     * The type of checkout key to create. This may be either `deploy-key` or `user-key`.
     */
    type: CheckoutKeyInputType;
};

export type CreateCheckoutKeyRequest = {
    requestBody?: CreateCheckoutKeyCheckoutKeyInput | undefined;
    /**
     * Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings).
     */
    projectSlug: string;
};

/**
 * Error response.
 */
export type CreateCheckoutKeyResponseBody = {
    message?: string | undefined;
};

/**
 * The type of checkout key. This may be either `deploy-key` or `github-user-key`.
 */
export const CheckoutKeyType = {
    DeployKey: "deploy-key",
    GithubUserKey: "github-user-key",
} as const;
/**
 * The type of checkout key. This may be either `deploy-key` or `github-user-key`.
 */
export type CheckoutKeyType = ClosedEnum<typeof CheckoutKeyType>;

/**
 * A checkout key
 */
export type CreateCheckoutKeyCheckoutKey = {
    /**
     * The date and time the checkout key was created.
     */
    createdAt: Date;
    /**
     * An SSH key fingerprint.
     */
    fingerprint: string;
    /**
     * A boolean value that indicates if this key is preferred.
     */
    preferred: boolean;
    /**
     * A public SSH key.
     */
    publicKey: string;
    /**
     * The type of checkout key. This may be either `deploy-key` or `github-user-key`.
     */
    type: CheckoutKeyType;
};

export type CreateCheckoutKeyResponse =
    | CreateCheckoutKeyResponseBody
    | CreateCheckoutKeyCheckoutKey;

/** @internal */
export const CheckoutKeyInputType$inboundSchema: z.ZodNativeEnum<typeof CheckoutKeyInputType> =
    z.nativeEnum(CheckoutKeyInputType);

/** @internal */
export const CheckoutKeyInputType$outboundSchema: z.ZodNativeEnum<typeof CheckoutKeyInputType> =
    CheckoutKeyInputType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutKeyInputType$ {
    /** @deprecated use `CheckoutKeyInputType$inboundSchema` instead. */
    export const inboundSchema = CheckoutKeyInputType$inboundSchema;
    /** @deprecated use `CheckoutKeyInputType$outboundSchema` instead. */
    export const outboundSchema = CheckoutKeyInputType$outboundSchema;
}

/** @internal */
export const CreateCheckoutKeyCheckoutKeyInput$inboundSchema: z.ZodType<
    CreateCheckoutKeyCheckoutKeyInput,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: CheckoutKeyInputType$inboundSchema,
});

/** @internal */
export type CreateCheckoutKeyCheckoutKeyInput$Outbound = {
    type: string;
};

/** @internal */
export const CreateCheckoutKeyCheckoutKeyInput$outboundSchema: z.ZodType<
    CreateCheckoutKeyCheckoutKeyInput$Outbound,
    z.ZodTypeDef,
    CreateCheckoutKeyCheckoutKeyInput
> = z.object({
    type: CheckoutKeyInputType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCheckoutKeyCheckoutKeyInput$ {
    /** @deprecated use `CreateCheckoutKeyCheckoutKeyInput$inboundSchema` instead. */
    export const inboundSchema = CreateCheckoutKeyCheckoutKeyInput$inboundSchema;
    /** @deprecated use `CreateCheckoutKeyCheckoutKeyInput$outboundSchema` instead. */
    export const outboundSchema = CreateCheckoutKeyCheckoutKeyInput$outboundSchema;
    /** @deprecated use `CreateCheckoutKeyCheckoutKeyInput$Outbound` instead. */
    export type Outbound = CreateCheckoutKeyCheckoutKeyInput$Outbound;
}

/** @internal */
export const CreateCheckoutKeyRequest$inboundSchema: z.ZodType<
    CreateCheckoutKeyRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: z.lazy(() => CreateCheckoutKeyCheckoutKeyInput$inboundSchema).optional(),
        "project-slug": z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
            "project-slug": "projectSlug",
        });
    });

/** @internal */
export type CreateCheckoutKeyRequest$Outbound = {
    RequestBody?: CreateCheckoutKeyCheckoutKeyInput$Outbound | undefined;
    "project-slug": string;
};

/** @internal */
export const CreateCheckoutKeyRequest$outboundSchema: z.ZodType<
    CreateCheckoutKeyRequest$Outbound,
    z.ZodTypeDef,
    CreateCheckoutKeyRequest
> = z
    .object({
        requestBody: z.lazy(() => CreateCheckoutKeyCheckoutKeyInput$outboundSchema).optional(),
        projectSlug: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
            projectSlug: "project-slug",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCheckoutKeyRequest$ {
    /** @deprecated use `CreateCheckoutKeyRequest$inboundSchema` instead. */
    export const inboundSchema = CreateCheckoutKeyRequest$inboundSchema;
    /** @deprecated use `CreateCheckoutKeyRequest$outboundSchema` instead. */
    export const outboundSchema = CreateCheckoutKeyRequest$outboundSchema;
    /** @deprecated use `CreateCheckoutKeyRequest$Outbound` instead. */
    export type Outbound = CreateCheckoutKeyRequest$Outbound;
}

/** @internal */
export const CreateCheckoutKeyResponseBody$inboundSchema: z.ZodType<
    CreateCheckoutKeyResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type CreateCheckoutKeyResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const CreateCheckoutKeyResponseBody$outboundSchema: z.ZodType<
    CreateCheckoutKeyResponseBody$Outbound,
    z.ZodTypeDef,
    CreateCheckoutKeyResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCheckoutKeyResponseBody$ {
    /** @deprecated use `CreateCheckoutKeyResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateCheckoutKeyResponseBody$inboundSchema;
    /** @deprecated use `CreateCheckoutKeyResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateCheckoutKeyResponseBody$outboundSchema;
    /** @deprecated use `CreateCheckoutKeyResponseBody$Outbound` instead. */
    export type Outbound = CreateCheckoutKeyResponseBody$Outbound;
}

/** @internal */
export const CheckoutKeyType$inboundSchema: z.ZodNativeEnum<typeof CheckoutKeyType> =
    z.nativeEnum(CheckoutKeyType);

/** @internal */
export const CheckoutKeyType$outboundSchema: z.ZodNativeEnum<typeof CheckoutKeyType> =
    CheckoutKeyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutKeyType$ {
    /** @deprecated use `CheckoutKeyType$inboundSchema` instead. */
    export const inboundSchema = CheckoutKeyType$inboundSchema;
    /** @deprecated use `CheckoutKeyType$outboundSchema` instead. */
    export const outboundSchema = CheckoutKeyType$outboundSchema;
}

/** @internal */
export const CreateCheckoutKeyCheckoutKey$inboundSchema: z.ZodType<
    CreateCheckoutKeyCheckoutKey,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "created-at": z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
        fingerprint: z.string(),
        preferred: z.boolean(),
        "public-key": z.string(),
        type: CheckoutKeyType$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "created-at": "createdAt",
            "public-key": "publicKey",
        });
    });

/** @internal */
export type CreateCheckoutKeyCheckoutKey$Outbound = {
    "created-at": string;
    fingerprint: string;
    preferred: boolean;
    "public-key": string;
    type: string;
};

/** @internal */
export const CreateCheckoutKeyCheckoutKey$outboundSchema: z.ZodType<
    CreateCheckoutKeyCheckoutKey$Outbound,
    z.ZodTypeDef,
    CreateCheckoutKeyCheckoutKey
> = z
    .object({
        createdAt: z.date().transform((v) => v.toISOString()),
        fingerprint: z.string(),
        preferred: z.boolean(),
        publicKey: z.string(),
        type: CheckoutKeyType$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            createdAt: "created-at",
            publicKey: "public-key",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCheckoutKeyCheckoutKey$ {
    /** @deprecated use `CreateCheckoutKeyCheckoutKey$inboundSchema` instead. */
    export const inboundSchema = CreateCheckoutKeyCheckoutKey$inboundSchema;
    /** @deprecated use `CreateCheckoutKeyCheckoutKey$outboundSchema` instead. */
    export const outboundSchema = CreateCheckoutKeyCheckoutKey$outboundSchema;
    /** @deprecated use `CreateCheckoutKeyCheckoutKey$Outbound` instead. */
    export type Outbound = CreateCheckoutKeyCheckoutKey$Outbound;
}

/** @internal */
export const CreateCheckoutKeyResponse$inboundSchema: z.ZodType<
    CreateCheckoutKeyResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => CreateCheckoutKeyResponseBody$inboundSchema),
    z.lazy(() => CreateCheckoutKeyCheckoutKey$inboundSchema),
]);

/** @internal */
export type CreateCheckoutKeyResponse$Outbound =
    | CreateCheckoutKeyResponseBody$Outbound
    | CreateCheckoutKeyCheckoutKey$Outbound;

/** @internal */
export const CreateCheckoutKeyResponse$outboundSchema: z.ZodType<
    CreateCheckoutKeyResponse$Outbound,
    z.ZodTypeDef,
    CreateCheckoutKeyResponse
> = z.union([
    z.lazy(() => CreateCheckoutKeyResponseBody$outboundSchema),
    z.lazy(() => CreateCheckoutKeyCheckoutKey$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCheckoutKeyResponse$ {
    /** @deprecated use `CreateCheckoutKeyResponse$inboundSchema` instead. */
    export const inboundSchema = CreateCheckoutKeyResponse$inboundSchema;
    /** @deprecated use `CreateCheckoutKeyResponse$outboundSchema` instead. */
    export const outboundSchema = CreateCheckoutKeyResponse$outboundSchema;
    /** @deprecated use `CreateCheckoutKeyResponse$Outbound` instead. */
    export type Outbound = CreateCheckoutKeyResponse$Outbound;
}
