/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetPolicyDocumentRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=context" })
    context: string;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=ownerID" })
    ownerID: string;

    /**
     * the policy name set by the rego policy_name rule
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=policyName" })
    policyName: string;
}

/**
 * Something unexpected happened on the server.
 */
export class GetPolicyDocument500ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error: string;
}

/**
 * There was no policy that was found with the given owner_id and policy name.
 *
 * @remarks
 *
 */
export class GetPolicyDocument404ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error: string;
}

/**
 * The user is forbidden from making this request
 *
 * @remarks
 *
 */
export class GetPolicyDocument403ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error: string;
}

/**
 * The request is unauthorized
 *
 * @remarks
 *
 */
export class GetPolicyDocument401ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error: string;
}

/**
 * The request is malformed (e.g, a given path parameter is invalid)
 *
 * @remarks
 *
 */
export class GetPolicyDocument400ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error: string;
}

export class GetPolicyDocumentResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * The request is malformed (e.g, a given path parameter is invalid)
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    getPolicyDocument400ApplicationJSONObject?: GetPolicyDocument400ApplicationJSON;

    /**
     * The request is unauthorized
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    getPolicyDocument401ApplicationJSONObject?: GetPolicyDocument401ApplicationJSON;

    /**
     * The user is forbidden from making this request
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    getPolicyDocument403ApplicationJSONObject?: GetPolicyDocument403ApplicationJSON;

    /**
     * There was no policy that was found with the given owner_id and policy name.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    getPolicyDocument404ApplicationJSONObject?: GetPolicyDocument404ApplicationJSON;

    /**
     * Something unexpected happened on the server.
     */
    @SpeakeasyMetadata()
    getPolicyDocument500ApplicationJSONObject?: GetPolicyDocument500ApplicationJSON;

    /**
     * Policy retrieved successfully.
     */
    @SpeakeasyMetadata()
    policy?: shared.Policy;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
