/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type GetJobArtifactsRequest = {
    /**
     * The number of the job.
     */
    jobNumber?: any | undefined;
    /**
     * Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings).
     */
    projectSlug: string;
};

/**
 * Error response.
 */
export type GetJobArtifactsResponseBody = {
    message?: string | undefined;
};

/**
 * An artifact
 */
export type Artifact = {
    /**
     * The index of the node that stored the artifact.
     */
    nodeIndex: number;
    /**
     * The artifact path.
     */
    path: string;
    /**
     * The URL to download the artifact contents.
     */
    url: string;
};

/**
 * A paginated list of the job's artifacts.
 */
export type GetJobArtifactsArtifactListResponse = {
    items: Array<Artifact>;
    /**
     * A token to pass as a `page-token` query parameter to return the next page of results.
     */
    nextPageToken: string;
};

export type GetJobArtifactsResponse =
    | GetJobArtifactsResponseBody
    | GetJobArtifactsArtifactListResponse;

/** @internal */
export const GetJobArtifactsRequest$inboundSchema: z.ZodType<
    GetJobArtifactsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "job-number": z.any().optional(),
        "project-slug": z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            "job-number": "jobNumber",
            "project-slug": "projectSlug",
        });
    });

/** @internal */
export type GetJobArtifactsRequest$Outbound = {
    "job-number"?: any | undefined;
    "project-slug": string;
};

/** @internal */
export const GetJobArtifactsRequest$outboundSchema: z.ZodType<
    GetJobArtifactsRequest$Outbound,
    z.ZodTypeDef,
    GetJobArtifactsRequest
> = z
    .object({
        jobNumber: z.any().optional(),
        projectSlug: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            jobNumber: "job-number",
            projectSlug: "project-slug",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobArtifactsRequest$ {
    /** @deprecated use `GetJobArtifactsRequest$inboundSchema` instead. */
    export const inboundSchema = GetJobArtifactsRequest$inboundSchema;
    /** @deprecated use `GetJobArtifactsRequest$outboundSchema` instead. */
    export const outboundSchema = GetJobArtifactsRequest$outboundSchema;
    /** @deprecated use `GetJobArtifactsRequest$Outbound` instead. */
    export type Outbound = GetJobArtifactsRequest$Outbound;
}

/** @internal */
export const GetJobArtifactsResponseBody$inboundSchema: z.ZodType<
    GetJobArtifactsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type GetJobArtifactsResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const GetJobArtifactsResponseBody$outboundSchema: z.ZodType<
    GetJobArtifactsResponseBody$Outbound,
    z.ZodTypeDef,
    GetJobArtifactsResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobArtifactsResponseBody$ {
    /** @deprecated use `GetJobArtifactsResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetJobArtifactsResponseBody$inboundSchema;
    /** @deprecated use `GetJobArtifactsResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetJobArtifactsResponseBody$outboundSchema;
    /** @deprecated use `GetJobArtifactsResponseBody$Outbound` instead. */
    export type Outbound = GetJobArtifactsResponseBody$Outbound;
}

/** @internal */
export const Artifact$inboundSchema: z.ZodType<Artifact, z.ZodTypeDef, unknown> = z
    .object({
        node_index: z.number().int(),
        path: z.string(),
        url: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            node_index: "nodeIndex",
        });
    });

/** @internal */
export type Artifact$Outbound = {
    node_index: number;
    path: string;
    url: string;
};

/** @internal */
export const Artifact$outboundSchema: z.ZodType<Artifact$Outbound, z.ZodTypeDef, Artifact> = z
    .object({
        nodeIndex: z.number().int(),
        path: z.string(),
        url: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            nodeIndex: "node_index",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Artifact$ {
    /** @deprecated use `Artifact$inboundSchema` instead. */
    export const inboundSchema = Artifact$inboundSchema;
    /** @deprecated use `Artifact$outboundSchema` instead. */
    export const outboundSchema = Artifact$outboundSchema;
    /** @deprecated use `Artifact$Outbound` instead. */
    export type Outbound = Artifact$Outbound;
}

/** @internal */
export const GetJobArtifactsArtifactListResponse$inboundSchema: z.ZodType<
    GetJobArtifactsArtifactListResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        items: z.array(z.lazy(() => Artifact$inboundSchema)),
        next_page_token: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            next_page_token: "nextPageToken",
        });
    });

/** @internal */
export type GetJobArtifactsArtifactListResponse$Outbound = {
    items: Array<Artifact$Outbound>;
    next_page_token: string;
};

/** @internal */
export const GetJobArtifactsArtifactListResponse$outboundSchema: z.ZodType<
    GetJobArtifactsArtifactListResponse$Outbound,
    z.ZodTypeDef,
    GetJobArtifactsArtifactListResponse
> = z
    .object({
        items: z.array(z.lazy(() => Artifact$outboundSchema)),
        nextPageToken: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            nextPageToken: "next_page_token",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobArtifactsArtifactListResponse$ {
    /** @deprecated use `GetJobArtifactsArtifactListResponse$inboundSchema` instead. */
    export const inboundSchema = GetJobArtifactsArtifactListResponse$inboundSchema;
    /** @deprecated use `GetJobArtifactsArtifactListResponse$outboundSchema` instead. */
    export const outboundSchema = GetJobArtifactsArtifactListResponse$outboundSchema;
    /** @deprecated use `GetJobArtifactsArtifactListResponse$Outbound` instead. */
    export type Outbound = GetJobArtifactsArtifactListResponse$Outbound;
}

/** @internal */
export const GetJobArtifactsResponse$inboundSchema: z.ZodType<
    GetJobArtifactsResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => GetJobArtifactsResponseBody$inboundSchema),
    z.lazy(() => GetJobArtifactsArtifactListResponse$inboundSchema),
]);

/** @internal */
export type GetJobArtifactsResponse$Outbound =
    | GetJobArtifactsResponseBody$Outbound
    | GetJobArtifactsArtifactListResponse$Outbound;

/** @internal */
export const GetJobArtifactsResponse$outboundSchema: z.ZodType<
    GetJobArtifactsResponse$Outbound,
    z.ZodTypeDef,
    GetJobArtifactsResponse
> = z.union([
    z.lazy(() => GetJobArtifactsResponseBody$outboundSchema),
    z.lazy(() => GetJobArtifactsArtifactListResponse$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobArtifactsResponse$ {
    /** @deprecated use `GetJobArtifactsResponse$inboundSchema` instead. */
    export const inboundSchema = GetJobArtifactsResponse$inboundSchema;
    /** @deprecated use `GetJobArtifactsResponse$outboundSchema` instead. */
    export const outboundSchema = GetJobArtifactsResponse$outboundSchema;
    /** @deprecated use `GetJobArtifactsResponse$Outbound` instead. */
    export type Outbound = GetJobArtifactsResponse$Outbound;
}
