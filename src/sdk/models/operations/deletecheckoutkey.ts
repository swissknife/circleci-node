/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type DeleteCheckoutKeyRequest = {
    /**
     * An SSH key fingerprint.
     */
    fingerprint: string;
    /**
     * Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings).
     */
    projectSlug: string;
};

/**
 * Error response.
 */
export type DeleteCheckoutKeyResponseBody = {
    message?: string | undefined;
};

/**
 * message response
 */
export type DeleteCheckoutKeyMessageResponse = {
    /**
     * A human-readable message
     */
    message: string;
};

export type DeleteCheckoutKeyResponse =
    | DeleteCheckoutKeyMessageResponse
    | DeleteCheckoutKeyResponseBody;

/** @internal */
export const DeleteCheckoutKeyRequest$inboundSchema: z.ZodType<
    DeleteCheckoutKeyRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        fingerprint: z.string(),
        "project-slug": z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            "project-slug": "projectSlug",
        });
    });

/** @internal */
export type DeleteCheckoutKeyRequest$Outbound = {
    fingerprint: string;
    "project-slug": string;
};

/** @internal */
export const DeleteCheckoutKeyRequest$outboundSchema: z.ZodType<
    DeleteCheckoutKeyRequest$Outbound,
    z.ZodTypeDef,
    DeleteCheckoutKeyRequest
> = z
    .object({
        fingerprint: z.string(),
        projectSlug: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            projectSlug: "project-slug",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCheckoutKeyRequest$ {
    /** @deprecated use `DeleteCheckoutKeyRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteCheckoutKeyRequest$inboundSchema;
    /** @deprecated use `DeleteCheckoutKeyRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteCheckoutKeyRequest$outboundSchema;
    /** @deprecated use `DeleteCheckoutKeyRequest$Outbound` instead. */
    export type Outbound = DeleteCheckoutKeyRequest$Outbound;
}

/** @internal */
export const DeleteCheckoutKeyResponseBody$inboundSchema: z.ZodType<
    DeleteCheckoutKeyResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type DeleteCheckoutKeyResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const DeleteCheckoutKeyResponseBody$outboundSchema: z.ZodType<
    DeleteCheckoutKeyResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteCheckoutKeyResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCheckoutKeyResponseBody$ {
    /** @deprecated use `DeleteCheckoutKeyResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteCheckoutKeyResponseBody$inboundSchema;
    /** @deprecated use `DeleteCheckoutKeyResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteCheckoutKeyResponseBody$outboundSchema;
    /** @deprecated use `DeleteCheckoutKeyResponseBody$Outbound` instead. */
    export type Outbound = DeleteCheckoutKeyResponseBody$Outbound;
}

/** @internal */
export const DeleteCheckoutKeyMessageResponse$inboundSchema: z.ZodType<
    DeleteCheckoutKeyMessageResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string(),
});

/** @internal */
export type DeleteCheckoutKeyMessageResponse$Outbound = {
    message: string;
};

/** @internal */
export const DeleteCheckoutKeyMessageResponse$outboundSchema: z.ZodType<
    DeleteCheckoutKeyMessageResponse$Outbound,
    z.ZodTypeDef,
    DeleteCheckoutKeyMessageResponse
> = z.object({
    message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCheckoutKeyMessageResponse$ {
    /** @deprecated use `DeleteCheckoutKeyMessageResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteCheckoutKeyMessageResponse$inboundSchema;
    /** @deprecated use `DeleteCheckoutKeyMessageResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteCheckoutKeyMessageResponse$outboundSchema;
    /** @deprecated use `DeleteCheckoutKeyMessageResponse$Outbound` instead. */
    export type Outbound = DeleteCheckoutKeyMessageResponse$Outbound;
}

/** @internal */
export const DeleteCheckoutKeyResponse$inboundSchema: z.ZodType<
    DeleteCheckoutKeyResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => DeleteCheckoutKeyMessageResponse$inboundSchema),
    z.lazy(() => DeleteCheckoutKeyResponseBody$inboundSchema),
]);

/** @internal */
export type DeleteCheckoutKeyResponse$Outbound =
    | DeleteCheckoutKeyMessageResponse$Outbound
    | DeleteCheckoutKeyResponseBody$Outbound;

/** @internal */
export const DeleteCheckoutKeyResponse$outboundSchema: z.ZodType<
    DeleteCheckoutKeyResponse$Outbound,
    z.ZodTypeDef,
    DeleteCheckoutKeyResponse
> = z.union([
    z.lazy(() => DeleteCheckoutKeyMessageResponse$outboundSchema),
    z.lazy(() => DeleteCheckoutKeyResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCheckoutKeyResponse$ {
    /** @deprecated use `DeleteCheckoutKeyResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteCheckoutKeyResponse$inboundSchema;
    /** @deprecated use `DeleteCheckoutKeyResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteCheckoutKeyResponse$outboundSchema;
    /** @deprecated use `DeleteCheckoutKeyResponse$Outbound` instead. */
    export type Outbound = DeleteCheckoutKeyResponse$Outbound;
}
