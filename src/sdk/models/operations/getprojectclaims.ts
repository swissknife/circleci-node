/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetProjectClaimsRequest = {
    orgID: string;
    projectID: string;
};

/**
 * The request is malformed (e.g, a given path parameter is invalid)
 *
 * @remarks
 *
 */
export type GetProjectClaimsResponseBody = {
    error: string;
};

export type GetProjectClaimsResponse = GetProjectClaimsResponseBody | shared.ClaimResponse;

/** @internal */
export const GetProjectClaimsRequest$inboundSchema: z.ZodType<
    GetProjectClaimsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    orgID: z.string(),
    projectID: z.string(),
});

/** @internal */
export type GetProjectClaimsRequest$Outbound = {
    orgID: string;
    projectID: string;
};

/** @internal */
export const GetProjectClaimsRequest$outboundSchema: z.ZodType<
    GetProjectClaimsRequest$Outbound,
    z.ZodTypeDef,
    GetProjectClaimsRequest
> = z.object({
    orgID: z.string(),
    projectID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectClaimsRequest$ {
    /** @deprecated use `GetProjectClaimsRequest$inboundSchema` instead. */
    export const inboundSchema = GetProjectClaimsRequest$inboundSchema;
    /** @deprecated use `GetProjectClaimsRequest$outboundSchema` instead. */
    export const outboundSchema = GetProjectClaimsRequest$outboundSchema;
    /** @deprecated use `GetProjectClaimsRequest$Outbound` instead. */
    export type Outbound = GetProjectClaimsRequest$Outbound;
}

/** @internal */
export const GetProjectClaimsResponseBody$inboundSchema: z.ZodType<
    GetProjectClaimsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type GetProjectClaimsResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const GetProjectClaimsResponseBody$outboundSchema: z.ZodType<
    GetProjectClaimsResponseBody$Outbound,
    z.ZodTypeDef,
    GetProjectClaimsResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectClaimsResponseBody$ {
    /** @deprecated use `GetProjectClaimsResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetProjectClaimsResponseBody$inboundSchema;
    /** @deprecated use `GetProjectClaimsResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetProjectClaimsResponseBody$outboundSchema;
    /** @deprecated use `GetProjectClaimsResponseBody$Outbound` instead. */
    export type Outbound = GetProjectClaimsResponseBody$Outbound;
}

/** @internal */
export const GetProjectClaimsResponse$inboundSchema: z.ZodType<
    GetProjectClaimsResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => GetProjectClaimsResponseBody$inboundSchema),
    shared.ClaimResponse$inboundSchema,
]);

/** @internal */
export type GetProjectClaimsResponse$Outbound =
    | GetProjectClaimsResponseBody$Outbound
    | shared.ClaimResponse$Outbound;

/** @internal */
export const GetProjectClaimsResponse$outboundSchema: z.ZodType<
    GetProjectClaimsResponse$Outbound,
    z.ZodTypeDef,
    GetProjectClaimsResponse
> = z.union([
    z.lazy(() => GetProjectClaimsResponseBody$outboundSchema),
    shared.ClaimResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectClaimsResponse$ {
    /** @deprecated use `GetProjectClaimsResponse$inboundSchema` instead. */
    export const inboundSchema = GetProjectClaimsResponse$inboundSchema;
    /** @deprecated use `GetProjectClaimsResponse$outboundSchema` instead. */
    export const outboundSchema = GetProjectClaimsResponse$outboundSchema;
    /** @deprecated use `GetProjectClaimsResponse$Outbound` instead. */
    export type Outbound = GetProjectClaimsResponse$Outbound;
}
