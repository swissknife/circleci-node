/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type SetDecisionSettingsRequest = {
    decisionSettings?: shared.DecisionSettings | undefined;
    context: string;
    ownerID: string;
};

/**
 * The request is malformed (e.g, a given path parameter is invalid)
 *
 * @remarks
 *
 */
export type SetDecisionSettingsResponseBody = {
    error: string;
};

export type SetDecisionSettingsResponse = shared.DecisionSettings | SetDecisionSettingsResponseBody;

/** @internal */
export const SetDecisionSettingsRequest$inboundSchema: z.ZodType<
    SetDecisionSettingsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        DecisionSettings: shared.DecisionSettings$inboundSchema.optional(),
        context: z.string(),
        ownerID: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            DecisionSettings: "decisionSettings",
        });
    });

/** @internal */
export type SetDecisionSettingsRequest$Outbound = {
    DecisionSettings?: shared.DecisionSettings$Outbound | undefined;
    context: string;
    ownerID: string;
};

/** @internal */
export const SetDecisionSettingsRequest$outboundSchema: z.ZodType<
    SetDecisionSettingsRequest$Outbound,
    z.ZodTypeDef,
    SetDecisionSettingsRequest
> = z
    .object({
        decisionSettings: shared.DecisionSettings$outboundSchema.optional(),
        context: z.string(),
        ownerID: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            decisionSettings: "DecisionSettings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetDecisionSettingsRequest$ {
    /** @deprecated use `SetDecisionSettingsRequest$inboundSchema` instead. */
    export const inboundSchema = SetDecisionSettingsRequest$inboundSchema;
    /** @deprecated use `SetDecisionSettingsRequest$outboundSchema` instead. */
    export const outboundSchema = SetDecisionSettingsRequest$outboundSchema;
    /** @deprecated use `SetDecisionSettingsRequest$Outbound` instead. */
    export type Outbound = SetDecisionSettingsRequest$Outbound;
}

/** @internal */
export const SetDecisionSettingsResponseBody$inboundSchema: z.ZodType<
    SetDecisionSettingsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type SetDecisionSettingsResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const SetDecisionSettingsResponseBody$outboundSchema: z.ZodType<
    SetDecisionSettingsResponseBody$Outbound,
    z.ZodTypeDef,
    SetDecisionSettingsResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetDecisionSettingsResponseBody$ {
    /** @deprecated use `SetDecisionSettingsResponseBody$inboundSchema` instead. */
    export const inboundSchema = SetDecisionSettingsResponseBody$inboundSchema;
    /** @deprecated use `SetDecisionSettingsResponseBody$outboundSchema` instead. */
    export const outboundSchema = SetDecisionSettingsResponseBody$outboundSchema;
    /** @deprecated use `SetDecisionSettingsResponseBody$Outbound` instead. */
    export type Outbound = SetDecisionSettingsResponseBody$Outbound;
}

/** @internal */
export const SetDecisionSettingsResponse$inboundSchema: z.ZodType<
    SetDecisionSettingsResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    shared.DecisionSettings$inboundSchema,
    z.lazy(() => SetDecisionSettingsResponseBody$inboundSchema),
]);

/** @internal */
export type SetDecisionSettingsResponse$Outbound =
    | shared.DecisionSettings$Outbound
    | SetDecisionSettingsResponseBody$Outbound;

/** @internal */
export const SetDecisionSettingsResponse$outboundSchema: z.ZodType<
    SetDecisionSettingsResponse$Outbound,
    z.ZodTypeDef,
    SetDecisionSettingsResponse
> = z.union([
    shared.DecisionSettings$outboundSchema,
    z.lazy(() => SetDecisionSettingsResponseBody$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetDecisionSettingsResponse$ {
    /** @deprecated use `SetDecisionSettingsResponse$inboundSchema` instead. */
    export const inboundSchema = SetDecisionSettingsResponse$inboundSchema;
    /** @deprecated use `SetDecisionSettingsResponse$outboundSchema` instead. */
    export const outboundSchema = SetDecisionSettingsResponse$outboundSchema;
    /** @deprecated use `SetDecisionSettingsResponse$Outbound` instead. */
    export type Outbound = SetDecisionSettingsResponse$Outbound;
}
