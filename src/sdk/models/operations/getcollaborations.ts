/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

/**
 * Error response.
 */
export type GetCollaborationsResponseBody = {
    message?: string | undefined;
};

export type Collaboration = {
    /**
     * URL to the user's avatar on the VCS
     */
    avatarUrl: string;
    /**
     * The UUID of the organization
     */
    id: string;
    /**
     * The name of the organization
     */
    name: string;
    /**
     * The slug of the organization
     */
    slug: string;
    /**
     * The VCS provider
     */
    vcsType: string;
};

export type GetCollaborationsResponse = GetCollaborationsResponseBody | Array<Collaboration>;

/** @internal */
export const GetCollaborationsResponseBody$inboundSchema: z.ZodType<
    GetCollaborationsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type GetCollaborationsResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const GetCollaborationsResponseBody$outboundSchema: z.ZodType<
    GetCollaborationsResponseBody$Outbound,
    z.ZodTypeDef,
    GetCollaborationsResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCollaborationsResponseBody$ {
    /** @deprecated use `GetCollaborationsResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetCollaborationsResponseBody$inboundSchema;
    /** @deprecated use `GetCollaborationsResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetCollaborationsResponseBody$outboundSchema;
    /** @deprecated use `GetCollaborationsResponseBody$Outbound` instead. */
    export type Outbound = GetCollaborationsResponseBody$Outbound;
}

/** @internal */
export const Collaboration$inboundSchema: z.ZodType<Collaboration, z.ZodTypeDef, unknown> = z
    .object({
        avatar_url: z.string(),
        id: z.string(),
        name: z.string(),
        slug: z.string(),
        "vcs-type": z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            avatar_url: "avatarUrl",
            "vcs-type": "vcsType",
        });
    });

/** @internal */
export type Collaboration$Outbound = {
    avatar_url: string;
    id: string;
    name: string;
    slug: string;
    "vcs-type": string;
};

/** @internal */
export const Collaboration$outboundSchema: z.ZodType<
    Collaboration$Outbound,
    z.ZodTypeDef,
    Collaboration
> = z
    .object({
        avatarUrl: z.string(),
        id: z.string(),
        name: z.string(),
        slug: z.string(),
        vcsType: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            avatarUrl: "avatar_url",
            vcsType: "vcs-type",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Collaboration$ {
    /** @deprecated use `Collaboration$inboundSchema` instead. */
    export const inboundSchema = Collaboration$inboundSchema;
    /** @deprecated use `Collaboration$outboundSchema` instead. */
    export const outboundSchema = Collaboration$outboundSchema;
    /** @deprecated use `Collaboration$Outbound` instead. */
    export type Outbound = Collaboration$Outbound;
}

/** @internal */
export const GetCollaborationsResponse$inboundSchema: z.ZodType<
    GetCollaborationsResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => GetCollaborationsResponseBody$inboundSchema),
    z.array(z.lazy(() => Collaboration$inboundSchema)),
]);

/** @internal */
export type GetCollaborationsResponse$Outbound =
    | GetCollaborationsResponseBody$Outbound
    | Array<Collaboration$Outbound>;

/** @internal */
export const GetCollaborationsResponse$outboundSchema: z.ZodType<
    GetCollaborationsResponse$Outbound,
    z.ZodTypeDef,
    GetCollaborationsResponse
> = z.union([
    z.lazy(() => GetCollaborationsResponseBody$outboundSchema),
    z.array(z.lazy(() => Collaboration$outboundSchema)),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCollaborationsResponse$ {
    /** @deprecated use `GetCollaborationsResponse$inboundSchema` instead. */
    export const inboundSchema = GetCollaborationsResponse$inboundSchema;
    /** @deprecated use `GetCollaborationsResponse$outboundSchema` instead. */
    export const outboundSchema = GetCollaborationsResponse$outboundSchema;
    /** @deprecated use `GetCollaborationsResponse$Outbound` instead. */
    export type Outbound = GetCollaborationsResponse$Outbound;
}
