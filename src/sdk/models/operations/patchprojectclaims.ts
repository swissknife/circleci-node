/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type PatchProjectClaimsRequest = {
    patchClaimsRequest?: shared.PatchClaimsRequest | undefined;
    orgID: string;
    projectID: string;
};

/**
 * The request is malformed (e.g, a given path parameter is invalid)
 *
 * @remarks
 *
 */
export type PatchProjectClaimsResponseBody = {
    error: string;
};

export type PatchProjectClaimsResponse = PatchProjectClaimsResponseBody | shared.ClaimResponse;

/** @internal */
export const PatchProjectClaimsRequest$inboundSchema: z.ZodType<
    PatchProjectClaimsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        PatchClaimsRequest: shared.PatchClaimsRequest$inboundSchema.optional(),
        orgID: z.string(),
        projectID: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            PatchClaimsRequest: "patchClaimsRequest",
        });
    });

/** @internal */
export type PatchProjectClaimsRequest$Outbound = {
    PatchClaimsRequest?: shared.PatchClaimsRequest$Outbound | undefined;
    orgID: string;
    projectID: string;
};

/** @internal */
export const PatchProjectClaimsRequest$outboundSchema: z.ZodType<
    PatchProjectClaimsRequest$Outbound,
    z.ZodTypeDef,
    PatchProjectClaimsRequest
> = z
    .object({
        patchClaimsRequest: shared.PatchClaimsRequest$outboundSchema.optional(),
        orgID: z.string(),
        projectID: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            patchClaimsRequest: "PatchClaimsRequest",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchProjectClaimsRequest$ {
    /** @deprecated use `PatchProjectClaimsRequest$inboundSchema` instead. */
    export const inboundSchema = PatchProjectClaimsRequest$inboundSchema;
    /** @deprecated use `PatchProjectClaimsRequest$outboundSchema` instead. */
    export const outboundSchema = PatchProjectClaimsRequest$outboundSchema;
    /** @deprecated use `PatchProjectClaimsRequest$Outbound` instead. */
    export type Outbound = PatchProjectClaimsRequest$Outbound;
}

/** @internal */
export const PatchProjectClaimsResponseBody$inboundSchema: z.ZodType<
    PatchProjectClaimsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    error: z.string(),
});

/** @internal */
export type PatchProjectClaimsResponseBody$Outbound = {
    error: string;
};

/** @internal */
export const PatchProjectClaimsResponseBody$outboundSchema: z.ZodType<
    PatchProjectClaimsResponseBody$Outbound,
    z.ZodTypeDef,
    PatchProjectClaimsResponseBody
> = z.object({
    error: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchProjectClaimsResponseBody$ {
    /** @deprecated use `PatchProjectClaimsResponseBody$inboundSchema` instead. */
    export const inboundSchema = PatchProjectClaimsResponseBody$inboundSchema;
    /** @deprecated use `PatchProjectClaimsResponseBody$outboundSchema` instead. */
    export const outboundSchema = PatchProjectClaimsResponseBody$outboundSchema;
    /** @deprecated use `PatchProjectClaimsResponseBody$Outbound` instead. */
    export type Outbound = PatchProjectClaimsResponseBody$Outbound;
}

/** @internal */
export const PatchProjectClaimsResponse$inboundSchema: z.ZodType<
    PatchProjectClaimsResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => PatchProjectClaimsResponseBody$inboundSchema),
    shared.ClaimResponse$inboundSchema,
]);

/** @internal */
export type PatchProjectClaimsResponse$Outbound =
    | PatchProjectClaimsResponseBody$Outbound
    | shared.ClaimResponse$Outbound;

/** @internal */
export const PatchProjectClaimsResponse$outboundSchema: z.ZodType<
    PatchProjectClaimsResponse$Outbound,
    z.ZodTypeDef,
    PatchProjectClaimsResponse
> = z.union([
    z.lazy(() => PatchProjectClaimsResponseBody$outboundSchema),
    shared.ClaimResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchProjectClaimsResponse$ {
    /** @deprecated use `PatchProjectClaimsResponse$inboundSchema` instead. */
    export const inboundSchema = PatchProjectClaimsResponse$inboundSchema;
    /** @deprecated use `PatchProjectClaimsResponse$outboundSchema` instead. */
    export const outboundSchema = PatchProjectClaimsResponse$outboundSchema;
    /** @deprecated use `PatchProjectClaimsResponse$Outbound` instead. */
    export type Outbound = PatchProjectClaimsResponse$Outbound;
}
