/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetProjectSettingsRequest extends SpeakeasyBase {
    /**
     * The `organization` segment of a project or org slug, the second of the three. For GitHub OAuth or Bitbucket projects, this is the organization name. For projects that use GitLab or GitHub App, use the organization ID (found in Organization Settings).
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=organization" })
    organization: string;

    /**
     * The `project` segment of a project slug, the third of the three. For GitHub OAuth or Bitbucket projects, this is the repository name. For projects that use GitLab or GitHub App, use the project ID (found in Project Settings).
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=project" })
    project: string;

    /**
     * The `provider` segment of a project or org slug, the first of the three. This may be a VCS. For projects that use GitLab or GitHub App, use `circleci`.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=provider" })
    provider: string;
}

/**
 * Internal server error.
 */
export class GetProjectSettingsProjectResponse500ResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

/**
 * API rate limits exceeded.
 */
export class GetProjectSettingsProjectResponse429ResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

/**
 * Insufficient credentials for a private project, OR the organization, project, or repository does not exist.
 */
export class GetProjectSettingsProjectResponseResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

/**
 * None or insufficient credentials provided.
 */
export class GetProjectSettingsProjectResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

/**
 * Credentials provided are invalid.
 */
export class GetProjectSettingsResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;
}

export class GetProjectSettingsResponse extends SpeakeasyBase {
    /**
     * Credentials provided are invalid.
     */
    @SpeakeasyMetadata()
    fourHundredAndOneApplicationJsonObject?: GetProjectSettingsResponseBody;

    /**
     * None or insufficient credentials provided.
     */
    @SpeakeasyMetadata()
    fourHundredAndThreeApplicationJsonObject?: GetProjectSettingsProjectResponseBody;

    /**
     * Insufficient credentials for a private project, OR the organization, project, or repository does not exist.
     */
    @SpeakeasyMetadata()
    fourHundredAndFourApplicationJsonObject?: GetProjectSettingsProjectResponseResponseBody;

    /**
     * API rate limits exceeded.
     */
    @SpeakeasyMetadata()
    fourHundredAndTwentyNineApplicationJsonObject?: GetProjectSettingsProjectResponse429ResponseBody;

    /**
     * Internal server error.
     */
    @SpeakeasyMetadata()
    fiveHundredApplicationJsonObject?: GetProjectSettingsProjectResponse500ResponseBody;

    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Successful response.
     */
    @SpeakeasyMetadata()
    projectSettings?: shared.ProjectSettings;
}
