/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetProjectSettingsRequest = {
    /**
     * The `organization` segment of a project or org slug, the second of the three. For GitHub OAuth or Bitbucket projects, this is the organization name. For projects that use GitLab or GitHub App, use the organization ID (found in Organization Settings).
     */
    organization: string;
    /**
     * The `project` segment of a project slug, the third of the three. For GitHub OAuth or Bitbucket projects, this is the repository name. For projects that use GitLab or GitHub App, use the project ID (found in Project Settings).
     */
    project: string;
    /**
     * The `provider` segment of a project or org slug, the first of the three. This may be a VCS. For projects that use GitLab or GitHub App, use `circleci`.
     */
    provider: string;
};

/**
 * Credentials provided are invalid.
 */
export type GetProjectSettingsResponseBody = {
    message?: string | undefined;
};

export type GetProjectSettingsResponse = GetProjectSettingsResponseBody | shared.ProjectSettings;

/** @internal */
export const GetProjectSettingsRequest$inboundSchema: z.ZodType<
    GetProjectSettingsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    organization: z.string(),
    project: z.string(),
    provider: z.string(),
});

/** @internal */
export type GetProjectSettingsRequest$Outbound = {
    organization: string;
    project: string;
    provider: string;
};

/** @internal */
export const GetProjectSettingsRequest$outboundSchema: z.ZodType<
    GetProjectSettingsRequest$Outbound,
    z.ZodTypeDef,
    GetProjectSettingsRequest
> = z.object({
    organization: z.string(),
    project: z.string(),
    provider: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectSettingsRequest$ {
    /** @deprecated use `GetProjectSettingsRequest$inboundSchema` instead. */
    export const inboundSchema = GetProjectSettingsRequest$inboundSchema;
    /** @deprecated use `GetProjectSettingsRequest$outboundSchema` instead. */
    export const outboundSchema = GetProjectSettingsRequest$outboundSchema;
    /** @deprecated use `GetProjectSettingsRequest$Outbound` instead. */
    export type Outbound = GetProjectSettingsRequest$Outbound;
}

/** @internal */
export const GetProjectSettingsResponseBody$inboundSchema: z.ZodType<
    GetProjectSettingsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type GetProjectSettingsResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const GetProjectSettingsResponseBody$outboundSchema: z.ZodType<
    GetProjectSettingsResponseBody$Outbound,
    z.ZodTypeDef,
    GetProjectSettingsResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectSettingsResponseBody$ {
    /** @deprecated use `GetProjectSettingsResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetProjectSettingsResponseBody$inboundSchema;
    /** @deprecated use `GetProjectSettingsResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetProjectSettingsResponseBody$outboundSchema;
    /** @deprecated use `GetProjectSettingsResponseBody$Outbound` instead. */
    export type Outbound = GetProjectSettingsResponseBody$Outbound;
}

/** @internal */
export const GetProjectSettingsResponse$inboundSchema: z.ZodType<
    GetProjectSettingsResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => GetProjectSettingsResponseBody$inboundSchema),
    shared.ProjectSettings$inboundSchema,
]);

/** @internal */
export type GetProjectSettingsResponse$Outbound =
    | GetProjectSettingsResponseBody$Outbound
    | shared.ProjectSettings$Outbound;

/** @internal */
export const GetProjectSettingsResponse$outboundSchema: z.ZodType<
    GetProjectSettingsResponse$Outbound,
    z.ZodTypeDef,
    GetProjectSettingsResponse
> = z.union([
    z.lazy(() => GetProjectSettingsResponseBody$outboundSchema),
    shared.ProjectSettings$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectSettingsResponse$ {
    /** @deprecated use `GetProjectSettingsResponse$inboundSchema` instead. */
    export const inboundSchema = GetProjectSettingsResponse$inboundSchema;
    /** @deprecated use `GetProjectSettingsResponse$outboundSchema` instead. */
    export const outboundSchema = GetProjectSettingsResponse$outboundSchema;
    /** @deprecated use `GetProjectSettingsResponse$Outbound` instead. */
    export type Outbound = GetProjectSettingsResponse$Outbound;
}
