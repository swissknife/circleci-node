/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type CreateContextRestrictionRequestBody = {
    /**
     * Deprecated - Use "restriction_type" and "restriction_value"
     *
     * @remarks
     * instead.
     *
     * The project ID to use for a project restriction. This is
     * mutually exclusive with restriction_type and restriction_value
     * and implies restriction_type is "project".
     *
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    projectId?: string | undefined;
    restrictionType?: string | undefined;
    restrictionValue?: string | undefined;
};

export type CreateContextRestrictionRequest = {
    requestBody: CreateContextRestrictionRequestBody;
    /**
     * An opaque identifier of a context.
     */
    contextId: string;
};

/**
 * Request conflict.
 */
export type CreateContextRestrictionContextResponse409ResponseBody = {
    message?: string | undefined;
};

/**
 * Credentials provided are invalid.
 */
export type CreateContextRestrictionContextResponseBody = {
    message?: string | undefined;
};

/**
 * Bad request.
 */
export type CreateContextRestrictionResponseBody = {
    message?: string | undefined;
};

export type CreateContextRestrictionResponse =
    | CreateContextRestrictionResponseBody
    | CreateContextRestrictionContextResponse409ResponseBody
    | CreateContextRestrictionContextResponseBody
    | shared.RestrictionCreated;

/** @internal */
export const CreateContextRestrictionRequestBody$inboundSchema: z.ZodType<
    CreateContextRestrictionRequestBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        project_id: z.string().optional(),
        restriction_type: z.string().optional(),
        restriction_value: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            project_id: "projectId",
            restriction_type: "restrictionType",
            restriction_value: "restrictionValue",
        });
    });

/** @internal */
export type CreateContextRestrictionRequestBody$Outbound = {
    project_id?: string | undefined;
    restriction_type?: string | undefined;
    restriction_value?: string | undefined;
};

/** @internal */
export const CreateContextRestrictionRequestBody$outboundSchema: z.ZodType<
    CreateContextRestrictionRequestBody$Outbound,
    z.ZodTypeDef,
    CreateContextRestrictionRequestBody
> = z
    .object({
        projectId: z.string().optional(),
        restrictionType: z.string().optional(),
        restrictionValue: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            projectId: "project_id",
            restrictionType: "restriction_type",
            restrictionValue: "restriction_value",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateContextRestrictionRequestBody$ {
    /** @deprecated use `CreateContextRestrictionRequestBody$inboundSchema` instead. */
    export const inboundSchema = CreateContextRestrictionRequestBody$inboundSchema;
    /** @deprecated use `CreateContextRestrictionRequestBody$outboundSchema` instead. */
    export const outboundSchema = CreateContextRestrictionRequestBody$outboundSchema;
    /** @deprecated use `CreateContextRestrictionRequestBody$Outbound` instead. */
    export type Outbound = CreateContextRestrictionRequestBody$Outbound;
}

/** @internal */
export const CreateContextRestrictionRequest$inboundSchema: z.ZodType<
    CreateContextRestrictionRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: z.lazy(() => CreateContextRestrictionRequestBody$inboundSchema),
        context_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
            context_id: "contextId",
        });
    });

/** @internal */
export type CreateContextRestrictionRequest$Outbound = {
    RequestBody: CreateContextRestrictionRequestBody$Outbound;
    context_id: string;
};

/** @internal */
export const CreateContextRestrictionRequest$outboundSchema: z.ZodType<
    CreateContextRestrictionRequest$Outbound,
    z.ZodTypeDef,
    CreateContextRestrictionRequest
> = z
    .object({
        requestBody: z.lazy(() => CreateContextRestrictionRequestBody$outboundSchema),
        contextId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
            contextId: "context_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateContextRestrictionRequest$ {
    /** @deprecated use `CreateContextRestrictionRequest$inboundSchema` instead. */
    export const inboundSchema = CreateContextRestrictionRequest$inboundSchema;
    /** @deprecated use `CreateContextRestrictionRequest$outboundSchema` instead. */
    export const outboundSchema = CreateContextRestrictionRequest$outboundSchema;
    /** @deprecated use `CreateContextRestrictionRequest$Outbound` instead. */
    export type Outbound = CreateContextRestrictionRequest$Outbound;
}

/** @internal */
export const CreateContextRestrictionContextResponse409ResponseBody$inboundSchema: z.ZodType<
    CreateContextRestrictionContextResponse409ResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type CreateContextRestrictionContextResponse409ResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const CreateContextRestrictionContextResponse409ResponseBody$outboundSchema: z.ZodType<
    CreateContextRestrictionContextResponse409ResponseBody$Outbound,
    z.ZodTypeDef,
    CreateContextRestrictionContextResponse409ResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateContextRestrictionContextResponse409ResponseBody$ {
    /** @deprecated use `CreateContextRestrictionContextResponse409ResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        CreateContextRestrictionContextResponse409ResponseBody$inboundSchema;
    /** @deprecated use `CreateContextRestrictionContextResponse409ResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        CreateContextRestrictionContextResponse409ResponseBody$outboundSchema;
    /** @deprecated use `CreateContextRestrictionContextResponse409ResponseBody$Outbound` instead. */
    export type Outbound = CreateContextRestrictionContextResponse409ResponseBody$Outbound;
}

/** @internal */
export const CreateContextRestrictionContextResponseBody$inboundSchema: z.ZodType<
    CreateContextRestrictionContextResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type CreateContextRestrictionContextResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const CreateContextRestrictionContextResponseBody$outboundSchema: z.ZodType<
    CreateContextRestrictionContextResponseBody$Outbound,
    z.ZodTypeDef,
    CreateContextRestrictionContextResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateContextRestrictionContextResponseBody$ {
    /** @deprecated use `CreateContextRestrictionContextResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateContextRestrictionContextResponseBody$inboundSchema;
    /** @deprecated use `CreateContextRestrictionContextResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateContextRestrictionContextResponseBody$outboundSchema;
    /** @deprecated use `CreateContextRestrictionContextResponseBody$Outbound` instead. */
    export type Outbound = CreateContextRestrictionContextResponseBody$Outbound;
}

/** @internal */
export const CreateContextRestrictionResponseBody$inboundSchema: z.ZodType<
    CreateContextRestrictionResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type CreateContextRestrictionResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const CreateContextRestrictionResponseBody$outboundSchema: z.ZodType<
    CreateContextRestrictionResponseBody$Outbound,
    z.ZodTypeDef,
    CreateContextRestrictionResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateContextRestrictionResponseBody$ {
    /** @deprecated use `CreateContextRestrictionResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateContextRestrictionResponseBody$inboundSchema;
    /** @deprecated use `CreateContextRestrictionResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateContextRestrictionResponseBody$outboundSchema;
    /** @deprecated use `CreateContextRestrictionResponseBody$Outbound` instead. */
    export type Outbound = CreateContextRestrictionResponseBody$Outbound;
}

/** @internal */
export const CreateContextRestrictionResponse$inboundSchema: z.ZodType<
    CreateContextRestrictionResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => CreateContextRestrictionResponseBody$inboundSchema),
    z.lazy(() => CreateContextRestrictionContextResponse409ResponseBody$inboundSchema),
    z.lazy(() => CreateContextRestrictionContextResponseBody$inboundSchema),
    shared.RestrictionCreated$inboundSchema,
]);

/** @internal */
export type CreateContextRestrictionResponse$Outbound =
    | CreateContextRestrictionResponseBody$Outbound
    | CreateContextRestrictionContextResponse409ResponseBody$Outbound
    | CreateContextRestrictionContextResponseBody$Outbound
    | shared.RestrictionCreated$Outbound;

/** @internal */
export const CreateContextRestrictionResponse$outboundSchema: z.ZodType<
    CreateContextRestrictionResponse$Outbound,
    z.ZodTypeDef,
    CreateContextRestrictionResponse
> = z.union([
    z.lazy(() => CreateContextRestrictionResponseBody$outboundSchema),
    z.lazy(() => CreateContextRestrictionContextResponse409ResponseBody$outboundSchema),
    z.lazy(() => CreateContextRestrictionContextResponseBody$outboundSchema),
    shared.RestrictionCreated$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateContextRestrictionResponse$ {
    /** @deprecated use `CreateContextRestrictionResponse$inboundSchema` instead. */
    export const inboundSchema = CreateContextRestrictionResponse$inboundSchema;
    /** @deprecated use `CreateContextRestrictionResponse$outboundSchema` instead. */
    export const outboundSchema = CreateContextRestrictionResponse$outboundSchema;
    /** @deprecated use `CreateContextRestrictionResponse$Outbound` instead. */
    export type Outbound = CreateContextRestrictionResponse$Outbound;
}
